{"version":3,"file":"static/js/342.d8fcab97.chunk.js","mappings":"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","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport ColorText from '../ColoredText';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={<ColorText color={KeyMap.getVariant(option.key)}>{getImage(option.key)}</ColorText>}\n        text={<ColorText color={KeyMap.getVariant(option.key)}>{option.label}</ColorText>}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => artifactSheets(key).nameRaw}\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets(key).nameRaw}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../Assets/Assets\"\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\nimport CardDark from \"../Card/CardDark\"\nimport CardLight from \"../Card/CardLight\"\nimport CloseButton from \"../CloseButton\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport { StarsDisplay } from \"../StarDisplay\"\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\n\ntype WeaponSelectionModalProps = {\n  show: boolean,\n  ascension?: number,\n  onHide: () => void,\n  onSelect: (wKey: WeaponKey) => void,\n  filter?: (sheet: WeaponSheet) => boolean,\n  weaponTypeFilter?: WeaponTypeKey,\n}\n\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\n\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets(wKey)))\n    .filter(wKey => weaponFilter.includes(weaponSheets(wKey).weaponType))\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\n    .sort((a, b) => weaponSheets(b).rarity - weaponSheets(a).rarity)\n\n  if (!weaponSheets) return null\n\n  return <ModalWrapper open={show} onClose={onHide}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\n          </Grid >\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid >\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {weaponIdList.map(weaponKey => {\n          const weaponSheet = weaponSheets(weaponKey)\n          return <Grid item key={weaponKey} lg={3} md={4}>\n            <CardLight sx={{ height: \"100%\" }} >\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\n                <Box sx={{ flexGrow: 1, px: 1 }}>\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n                </Box>\n              </CardActionArea>\n            </CardLight>\n          </Grid>\n        })}\n      </Grid></CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onHide} />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Button } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterSelectionModal } from '../CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore, Replay } from \"@mui/icons-material\";\nimport { Box, Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport KeyMap, { valueString } from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  const onReset = useCallback(() => characterDispatch({ enemyOverride: {} }), [characterDispatch])\n\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n      <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\n      {allElementsWithPhy.map(element => <Typography key={element} ><EnemyResText element={element} /></Typography>)}\n      <Typography>DEF Red. {valueString(eDefRed.value, eDefRed.unit)}</Typography>\n      <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\n      <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n        <Button size=\"small\" color=\"error\" sx={{ minWidth: 0, p: 0.5 }} onClick={onReset}><Replay /> RESET</Button>\n        <ExpandButton\n          expand={expanded}\n          onClick={toggle}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          size=\"small\"\n          sx={{  marginLeft: 0 }}\n        >\n          <ExpandMore />\n        </ExpandButton>\n      </Box>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} &#8734;</span> :\n    <span >{StatIcon[element]} <strong>{valueString(node.value, node.unit)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val !== undefined ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"∞ \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport StatIcon from \"../../Components/StatIcon\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\nimport { allElements, ElementKeyWithPhy } from \"../../Types/consts\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  const { t } = useTranslation(\"page_character\")\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = characterSheet.elementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.map(k => input.total[k])\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\n    if (isMelee) eles.concat([\"physical\"])\n\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildsettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype DynMinMax = { [key in string]: MinMax }\ntype MinMax = { min: number, max: number }\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nfunction reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\n\n  function visit(node: NumNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(_op => {\n      const op = _op as NumNode\n      affineNodes.has(op) && topLevelAffine.add(op)\n    })\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const operation = f.operation\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\":\n        if (typeof f.value === \"string\" || f.value === undefined)\n          throw new Error(`Found constant ${f.value} while compacting`)\n        visit(f as NumNode, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return f.operands[3]\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\n  const range = new Map<NumNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, _f => {\n    const f = _f as NumNode\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"subscript\": current = computeMinMax(f.list); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = operands[3]\n        else current = computeMinMax([], [operands[2], operands[3]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      case \"data\": case \"lookup\": case \"match\":\n        throw new Error(`Unsupported ${operation} node`)\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\n\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/DataManagers/BuildsettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = tested * 100 / (unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useContext } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const { database } = useContext(DatabaseContext)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { DatabaseContext } from \"../../Database/Database\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from \"../../KeyMap\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\nimport { LocationKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon from \"../StatIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\n        <span>{StatIcon[node.info.key]}</span>\n      </BootstrapTooltip>\n      <span>{val}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: LocationKey }) {\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Checkroom, ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ArtifactSlotKey } from 'pipeline';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, charKeyToLocCharKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtonsRight?: JSX.Element,\n  extraButtonsLeft?: JSX.Element,\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtonsRight, extraButtonsLeft, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    allSlotKeys.forEach(s => {\n      const aid = data.get(input.art[s].id).value\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\n    })\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = data.get(input.art[slotKey].id).value!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <SetBadges currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          {extraButtonsLeft}\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped} startIcon={<Checkroom />}>Equip Build</Button>\n          {extraButtonsRight}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\n  const { data } = useContext(DataContext)\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n  )}</>\n\n}\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography >{t`tcGraph.vs`}</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton size='small' title={plotBase ? KeyMap.get(plotBase) : t`tcGraph.notSel`}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>{t`ui:unselect`}</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showMinStatThr`}</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name={t`tcGraph.optTarget`} dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name={t`tcGraph.minStatReqThr`} dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { input } from \"../../../../../Formula\"\nimport { StatKey } from \"../../../../../KeyMap\"\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\nimport useBuildSetting from \"../useBuildSetting\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\n\n  const statKeys = useMemo(() => {\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n    const charEle = data.get(input.charEle).value as ElementKey\n    statKeys.push(`${charEle}_dmg_`)\n    return statKeys\n  }, [data])\n\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport { CharacterSelectionModal } from \"../../../../CharacterSelectionModal\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setTO] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setTO(to)), [database, setTO])\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => database.displayOptimize.set({ equipmentPriority }), [database])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { CheckBox, CheckBoxOutlineBlank, Close, Science, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { defThreads } from '../../../../Database/DataEntries/DisplayOptimizeEntry';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport KeyMap from '../../../../KeyMap';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\nimport { objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setDisplayOptimize] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setDisplayOptimize(to)), [database, setDisplayOptimize])\n\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => database.displayOptimize.set({ threads }), [database],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    const targetNode = optimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      nodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    const prepruneArts = arts\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    optimizationTargetNode = nodes.pop()!\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\n\n    const minFilterCount = 8_000_000, maxRequestFilterInFlight = maxWorkers * 4\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\n    const workers: Worker[] = []\n\n    function getThreshold(): number {\n      return wrap.buildValues[maxBuildsToShow - 1].val\n    }\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: getThreshold() }\n    }\n    function fetchPruningWork(): WorkerCommand | undefined {\n      const { done, value } = unprunedFilters.next()\n      return done ? undefined : {\n        command: \"split\", minCount: minFilterCount,\n        threshold: getThreshold(), filter: value,\n      }\n    }\n    function fetchRequestWork(): WorkerCommand | undefined {\n      const filter = requestFilters.pop()\n      return !filter ? undefined : {\n        command: \"iterate\",\n        threshold: getThreshold(), filter\n      }\n    }\n\n    const filters = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts,\n        optimizationTarget: optimizationTargetNode,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters\n      }\n      worker.postMessage(setup, undefined)\n      if (i === 0) {\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n        worker.postMessage(countCommand, undefined)\n      }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\n            }\n            break\n          case \"split\":\n            if (data.filter) {\n              requestFilters.push(data.filter)\n              splittingWorkers.add(data.id)\n            } else splittingWorkers.delete(data.id)\n            idleWorkers.push(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.push(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n        while (idleWorkers.length) {\n          const id = idleWorkers.pop()!, worker = workers[id]\n          let work: WorkerCommand | undefined\n          if (requestFilters.length < maxRequestFilterInFlight) {\n            work = fetchPruningWork()\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\n          }\n          if (!work) work = fetchRequestWork()\n          if (work) worker.postMessage(work)\n          else {\n            idleWorkers.push(id)\n            if (idleWorkers.length === 8 * maxWorkers) {\n              const command: WorkerCommand = { command: \"finalize\" }\n              workers.forEach(worker => worker.postMessage(command))\n            }\n            break\n          }\n        }\n      }\n\n      workers.push(worker)\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n    for (let i = 0; i < 7; i++)\n      idleWorkers.push(...range(0, maxWorkers - 1))\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Box>\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\n              </Box>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>{t`levelFilter`}</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<TrendingUp />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        <BuildList builds={builds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\n      </OptimizationTargetContext.Provider>\n    </DataContext.Provider>}\n  </Box>\n}\nfunction BuildList({ builds, characterKey, data, compareData, disabled }: {\n  builds: string[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {builds?.map((build, index) => characterKey && data && <DataContextWrapper\n      key={index + build.join()}\n      characterKey={characterKey}\n      build={build}\n      oldData={data}\n    >\n      <BuildItemWrapper index={index} build={build} compareData={compareData} disabled={disabled} />\n    </DataContextWrapper>\n    )}\n  </Suspense>, [builds, characterKey, data, compareData, disabled])\n  return list\n}\nfunction BuildItemWrapper({ index, build, compareData, disabled }: {\n  index: number\n  build: string[],\n  compareData: boolean,\n  disabled: boolean,\n}) {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const toTC = useCallback(() => {\n    const paths = location.pathname.split(\"/\")\n    paths.pop()\n    navigate(`${paths.join(\"/\")}/theorycraft`, { state: { build } })\n  }, [navigate, build, location.pathname])\n\n  return <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled}\n    extraButtonsLeft={<Button color=\"info\" size=\"small\" startIcon={<Science />} onClick={toTC}>Theorycraft</Button>} />\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: string[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { database } = useContext(DatabaseContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  // Update the build when the build artifacts are changed.\n  const [dirty, setDirty] = useForceUpdate()\n  useEffect(() => database.arts.followAny((id) => build.includes(id) && setDirty()), [database, build, setDirty])\n  const buildsArts = useMemo(() => dirty && build.map(i => database.arts.get(i)!), [dirty, build, database])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, buildsArts)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap).filter(a => a)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n      <BuildDisplayItem compareBuild={true} extraButtonsLeft={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /></>} extraButtonsRight={<><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n    </DataContext.Provider>}\n  </Suspense>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useCharMeta from '../../../../ReactHooks/useCharMeta';\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const { rvFilter } = useCharMeta(characterKey)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editorProps={{}} canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const { rvFilter } = useCharMeta(characterKey)\n  const setRVFilter = useCallback(rvFilter => database.charMeta.set(characterKey, { rvFilter }), [database, characterKey],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useCharMeta from \"../../../../ReactHooks/useCharMeta\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { database } = useContext(DatabaseContext)\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const { favorite } = useCharMeta(characterKey)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => database.charMeta.set(characterKey, { favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <Box>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </Box>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from 'react';\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).filter(([_, node]) => !node.isEmpty).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { AutocompleteProps, CardContent, CardHeader, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DatabaseContext } from \"../../../Database/Database\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport useDBMeta from \"../../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={(n.info.key ?? \"\") + i} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { t } = useTranslation(\"page_character\")\n  const { data } = useContext(DataContext)\n  const { character: { team } } = useContext(CharacterContext)\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\n  return <>\n    <CardLight>\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\n    </CardLight>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\n  const onClickHandler = useCharSelectionCallback()\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\n      setChar={setTeammate}\n      label={t(\"teammate\", { count: index + 1 })}\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n\nfunction TeammateAutocomplete({ characterKey, team, label, setChar, autoCompleteProps = {} }:\n  { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<CharacterKey | \"\">, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\n  const isFavorite = useCallback((key: CharacterKey) => database.charMeta.get(key).favorite, [database])\n  const onDisable = useCallback(({ key }: { key: CharacterKey | \"\" }) => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\n    key: \"\",\n    label: t`page_character:none`,\n  },\n  ...database.chars.keys\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} getOptionDisabled={onDisable} toImg={toImg} {...autoCompleteProps} /></Suspense>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Stack, ToggleButton, Typography } from \"@mui/material\";\nimport { WeaponTypeKey } from \"pipeline\";\nimport { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ColorText from \"../../../../Components/ColoredText\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponSelectionModal from \"../../../../Components/Weapon/WeaponSelectionModal\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/DataManagers/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n\n  const copyFrom = useCallback(\n    (eWeapon: ICachedWeapon, build: ICachedArtifact[]) => {\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      build.forEach(art => {\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat => {\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        })\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n      setData(newData)\n    },\n    [data, setData],\n  )\n  const location = useLocation()\n  const { build: locBuild } = (location.state as { build: string[] } | undefined) ?? { build: undefined }\n  useEffect(() => {\n    if (!locBuild) return\n    const eWeapon = database.weapons.get(character.equippedWeapon)!\n    copyFrom(eWeapon, locBuild.map(i => database.arts.get(i)!))\n    // WARNING: if copyFrom is included, it will cause a render loop due to its setData <---> data\n    // eslint-disable-next-line\n  }, [locBuild, database])\n\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      copyFrom(eWeapon, Object.values(character.equippedArtifacts).map(a => database.arts.get(a)!).filter(a => a))\n    },\n    [database, character.equippedArtifacts, character.equippedWeapon, copyFrom],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const overriderArtData = useMemo(() => {\n    const stats = { ...data.artifact.substats.stats }\n    Object.values(data.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(data.artifact.sets, v => constant(v)),\n    }\n  }, [data])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [charUIData, teamData, compareData, oldData])\n\n  return <Stack spacing={1}>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Box>\n        <CardLight>\n          <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n            <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n              <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n              <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n            </Box>\n            <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup>\n          </Box>\n        </CardLight>\n      </Box>\n      <Box>\n        <Grid container spacing={1} sx={{ justifyContent: \"center\" }} columns={4}>\n          <Grid item sx={{ flexGrow: -1 }}  >\n            <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          </Grid>\n          <Grid item sx={{ flexGrow: 1 }}  >\n            <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n          </Grid>\n          <Grid item sx={{ flexGrow: 1 }}  >\n            <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\n          </Grid>\n        </Grid >\n      </Box>\n      <CardLight sx={{ flexGrow: 1, p: 1 }}>\n        <StatDisplayComponent />\n      </CardLight>\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />}\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, height: \"100%\" }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} sx={{ height: \"100%\" }}>\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const unit = KeyMap.unit(statKey)\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const rv = value / Artifact.substatValue(statKey) * 100\n  const rolls = value / substatValue\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\n  const maxRolls = (5 - numMains) * 6\n  const invalid = rolls > maxRolls\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n    </CardDark>\n    <CustomNumberInput\n      color={value ? \"success\" : \"primary\"}\n      float={KeyMap.unit(statKey) === \"%\"}\n      endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n      value={parseFloat(value.toFixed(2))}\n      onChange={v => v !== undefined && setValue(v)}\n      sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n      inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n    <CustomNumberInput\n      color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\n      float\n      startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n      value={parseFloat(rolls.toFixed(2))}\n      onChange={v => v !== undefined && setValue(v * substatValue)}\n      sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n      inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\n      <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n        <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n      </CardDark>\n    </BootstrapTooltip>\n  </Box>\n\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(() => database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { sgt } from '../../Data/SheetUtil';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\n\nexport default function TravelerElementSelect() {\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const setCharacter = useCharSelectionCallback()\n  if (!(key.startsWith(\"Traveler\"))) return null\n\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\n\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\n    {travelerElements.map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { Female, Male } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\n\nexport default function TravelerGenderSelect() {\n  const { t } = useTranslation(\"ui\")\n  const { database } = useContext(DatabaseContext)\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const { gender } = useDBMeta()\n  const toggleGender = useCallback(() => database.dbMeta.set({ gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\n  if (!(key.startsWith(\"Traveler\"))) return null\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport LevelSelect from '../../Components/LevelSelect';\nimport SqBadge from '../../Components/SqBadge';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TravelerElementSelect from './TravelerElementSelect';\nimport TravelerGenderSelect from './TravelerGenderSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const { database } = useContext(DatabaseContext)\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\n\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\n\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Box display=\"flex\" >\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n            <CharSelectDropdown />\n            <TravelerElementSelect />\n            <TravelerGenderSelect />\n            <DetailStatButton />\n            <CustomMultiTargetButton />\n            <FormulasButton />\n          </Box>\n          {!!onClose && <CloseButton onClick={onClose} />}\n        </Box>\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n          <HitModeToggle size=\"small\" />\n          <InfusionAuraDropdown />\n          <ReactionToggle size=\"small\" />\n        </Box>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <CharacterPanel />\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent></FormulaDataWrapper>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const { t } = useTranslation(\"page_character\")\n  const [open, onOpen, onClose] = useBoolState()\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const bStatsNum = Object.keys(bonusStats).length\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\n    </Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t, disableClearable: true }} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","KeyMap","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","WeaponSelectionModal","show","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","allWeaponTypeKeys","weaponFilter","setWeaponfilter","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","weaponType","toLowerCase","open","onClose","py","container","spacing","item","autoFocus","target","InputProps","weaponKey","weaponSheet","lg","md","src","getImg","className","Assets","colored","large","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","ThumbSide","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","enemyOverride","EnemyResText","justifyContent","minWidth","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","Grid","href","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","eles","allElements","n","some","miscStatReadNodes","StatDisplayCard","OptimizationTargetContext","createContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","newNodes","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","operands","forEach","_op","op","has","dynKeys","forEachNodes","f","operation","accu","Error","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","mapFormulas","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","j","ranges","range","reads","_f","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","sk","slotKey","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","setExclusionSet","slots","tot","set4CondNums","setEffects","doc","defIconSrc","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","alignContent","gender","useDBMeta","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","computeUIData","dataObjForWeapon","WeaponNameTooltip","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtonsRight","extraButtonsLeft","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","Checkroom","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","ArtifactCard","canExclude","canEquip","editorProps","disableSet","disableSlot","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","pop","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","fill","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","displayOptimize","tempEquipmentPriority","equipmentPriority","setTO","to","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","splice","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","TabBuild","compareData","buildStatus","setBuildStatus","setchartData","setArtsDirty","threads","defThreads","setDisplayOptimize","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","cancelToken","generateBuilds","getThreshold","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","unprunedFilters","next","done","minCount","minFilterCount","buildValues","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","optimizationTargetNode","objPathValue","targetNode","valueFilter","cancelled","Promise","setPerms","prepruneArts","optimize","plotBaseNode","Array","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","Worker","URL","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","source","terminate","pruned","prepruned","console","log","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","DataContextWrapper","BuildItemWrapper","join","useLocation","navigate","useNavigate","toTC","paths","pathname","Science","dirty","setDirty","buildsArts","providerValue","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","extraButtons","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","setRarity","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","rvFilter","useCharMeta","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setRVFilter","charMeta","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","Favorite","FavoriteBorder","right","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","active","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","autoCompleteProps","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","pr","isFavorite","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","TabTheorycraft","defWeapon","charTCs","getWithInit","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFrom","eWeapon","newData","artifact","stats","locBuild","copyFromEquipped","lock","setArtifact","data_","setSubstatsType","setSubstats","overriderArtData","overrideWeapon","charUIData","dataContextValue","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","setValue","deleteValue","rest","ArtifactSetEditor","disableClearable","setName","DeleteForever","rv","substatType","ArtifactSubstatEditor","substatValue","numMains","ms","maxRolls","invalid","parseFloat","TravelerElementSelect","sgt","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","dbMeta","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","end","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","bStatsNum","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","displayVal","faEdit","faTrashAlt"],"sourceRoot":""}
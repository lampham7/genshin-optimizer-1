{"version":3,"file":"static/js/915.839da2d7.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowRightAlt.js","Data/Materials/Material.ts","PageDocumentation/index.tsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import material_gen from './material_gen.json'\nconst material = material_gen\nexport default material","import { ArrowRightAlt } from \"@mui/icons-material\";\nimport { Box, CardContent, Divider, Grid, Link as MuiLink, Skeleton, styled, Tab, Tabs, Typography } from \"@mui/material\";\nimport { Suspense, useContext } from \"react\";\nimport ReactGA from 'react-ga4';\nimport { useTranslation } from 'react-i18next';\nimport { Link, Route, Routes, useMatch } from \"react-router-dom\";\nimport CardDark from \"../Components/Card/CardDark\";\nimport CardLight from \"../Components/Card/CardLight\";\nimport SqBadge from \"../Components/SqBadge\";\nimport material from \"../Data/Materials/Material\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport KeyMap from \"../KeyMap\";\nimport useDBMeta from \"../ReactHooks/useDBMeta\";\nimport { allArtifactSets, allWeaponKeys, charKeyToCharName, locationCharacterKeys } from \"../Types/consts\";\n\nexport default function PageDocumentation() {\n  // const { t } = useTranslation(\"documentation\")\n  ReactGA.send({ hitType: \"pageview\", page: '/doc' })\n\n  const { params: { currentTab } } = useMatch(\"/doc/:currentTab\") ?? { params: { currentTab: \"\" } }\n\n  return <CardDark sx={{ my: 1 }}>\n    <Grid container sx={{ px: 2, py: 1 }}>\n      <Grid item flexGrow={1}>\n        <Typography variant=\"h6\">\n          Documentation\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h6\">\n          <SqBadge color=\"info\">Version. 2</SqBadge>\n        </Typography>\n      </Grid>\n    </Grid>\n    <Divider />\n    <CardContent>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={2}>\n          <CardLight sx={{ height: \"100%\" }}>\n            <Tabs\n              orientation=\"vertical\"\n              value={currentTab}\n              aria-label=\"Documentation Navigation\"\n              sx={{ borderRight: 1, borderColor: 'divider' }}\n            >\n              <Tab label=\"Overview\" value=\"\" component={Link} to=\"\" />\n              <Tab label={\"Key naming convention\"} value=\"KeyNaming\" component={Link} to=\"KeyNaming\" />\n              <Tab label={<code>StatKey</code>} value=\"StatKey\" component={Link} to=\"StatKey\" />\n              <Tab label={<code>ArtifactSetKey</code>} value=\"ArtifactSetKey\" component={Link} to=\"ArtifactSetKey\" />\n              <Tab label={<code>CharacterKey</code>} value=\"CharacterKey\" component={Link} to=\"CharacterKey\" />\n              <Tab label={<code>WeaponKey</code>} value=\"WeaponKey\" component={Link} to=\"WeaponKey\" />\n              <Tab label={<code>MaterialKey</code>} value=\"MaterialKey\" component={Link} to=\"MaterialKey\" />\n              <Tab label={\"Version History\"} value=\"VersionHistory\" component={Link} to=\"VersionHistory\" />\n            </Tabs>\n          </CardLight>\n        </Grid>\n        <Grid item xs={12} md={10}>\n          <CardLight sx={{ height: \"100%\" }}>\n            <CardContent>\n              <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n                <Routes>\n                  <Route index element={<Overview />} />\n                  <Route path=\"/VersionHistory\" element={<VersionHistoryPane />} />\n                  <Route path=\"/MaterialKey\" element={<MaterialKeyPane />} />\n                  <Route path=\"/ArtifactSetKey\" element={<ArtifactSetKeyPane />} />\n                  <Route path=\"/WeaponKey\" element={<WeaponKeyPane />} />\n                  <Route path=\"/CharacterKey\" element={<CharacterKeyPane />} />\n                  <Route path=\"/StatKey\" element={<StatKeyPane />} />\n                  <Route path=\"/KeyNaming\" element={<KeyNamingPane />} />\n                </Routes>\n              </Suspense>\n            </CardContent>\n          </CardLight>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </CardDark>\n}\n\nconst goodCode = `interface IGOOD {\n  format: \"GOOD\" // A way for people to recognize this format.\n  version: number // GOOD API version.\n  source: string // The app that generates this data.\n  characters?: ICharacter[]\n  artifacts?: IArtifact[]\n  weapons?: IWeapon[]\n  materials?: { // Added in version 2\n    [key:MaterialKey]: number\n  }\n}`\n\nconst artifactCode = `interface IArtifact {\n  setKey: SetKey //e.g. \"GladiatorsFinale\"\n  slotKey: SlotKey //e.g. \"plume\"\n  level: number //0-20 inclusive\n  rarity: number //1-5 inclusive\n  mainStatKey: StatKey\n  location: CharacterKey|\"\" //where \"\" means not equipped.\n  lock: boolean //Whether the artifact is locked in game.\n  substats: ISubstat[]\n}\n\ninterface ISubstat {\n  key: StatKey //e.g. \"critDMG_\"\n  value: number //e.g. 19.4\n}\n\ntype SlotKey = \"flower\" | \"plume\" | \"sands\" | \"goblet\" | \"circlet\"`\n\nconst weaponCode = `interface IWeapon {\n  key: WeaponKey //\"CrescentPike\"\n  level: number //1-90 inclusive\n  ascension: number //0-6 inclusive. need to disambiguate 80/90 or 80/80\n  refinement: number //1-5 inclusive\n  location: CharacterKey | \"\" //where \"\" means not equipped.\n  lock: boolean //Whether the weapon is locked in game.\n}`\nconst characterCode = `interface ICharacter {\n  key: CharacterKey //e.g. \"Rosaria\"\n  level: number //1-90 inclusive\n  constellation: number //0-6 inclusive\n  ascension: number //0-6 inclusive. need to disambiguate 80/90 or 80/80\n  talent: { //does not include boost from constellations. 1-15 inclusive\n    auto: number\n    skill: number\n    burst: number\n  }\n}`\n\nfunction Overview() {\n  return <>\n    <Typography gutterBottom variant=\"h4\">Genshin Open Object Description (GOOD)</Typography>\n    <Typography gutterBottom><strong>GOOD</strong> is a data format description to map Genshin Data into a parsable JSON. This is intended to be a standardized format to allow Genshin developers/programmers to transfer data without needing manual conversion.</Typography>\n    <Typography gutterBottom>As of version 6.0.0, Genshin Optimizer's database export conforms to this format.</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={goodCode} />\n      </CardContent>\n    </CardDark>\n    <br />\n    <Typography gutterBottom variant=\"h4\">Artifact data representation</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={artifactCode} />\n      </CardContent>\n    </CardDark>\n    <br />\n    <Typography gutterBottom variant=\"h4\">Weapon data representation</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={weaponCode} />\n      </CardContent>\n    </CardDark>\n    <br />\n    <Typography gutterBottom variant=\"h4\">Character data representation</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={characterCode} />\n      </CardContent>\n    </CardDark>\n  </>\n}\nfunction KeyNamingPane() {\n  return <>\n    <CardDark>\n      <CardContent>\n        <Typography>Key Naming Convention</Typography>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Typography gutterBottom>The keys in the GOOD format, like Artifact sets, weapon keys, character keys, are all in <strong>PascalCase</strong>. This makes the name easy to derive from the in-game text, assuming no renames occur. If a rename is needed, then the standard will have to increment versions. (Last change was in 1.2 when the Prototype weapons were renamed)</Typography>\n        <Typography gutterBottom> To derive the PascalKey from a specific name, remove all symbols from the name, and Capitalize each word:</Typography>\n        <Typography><code>Gladiator's Finale</code> <ArrowRightAlt sx={{ verticalAlign: \"bottom\" }} /> <code>GladiatorsFinale</code></Typography>\n        <Typography><code>Spirit Locket of Boreas</code> <ArrowRightAlt sx={{ verticalAlign: \"bottom\" }} /> <code>SpiritLocketOfBoreas</code></Typography>\n        <Typography><code>\"The Catch\"</code> <ArrowRightAlt sx={{ verticalAlign: \"bottom\" }} /> <code>TheCatch</code></Typography>\n      </CardContent>\n    </CardDark>\n  </>\n}\n\nfunction StatKeyPane() {\n  // const { t } = useTranslation()\n  const statKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\"] as const\n  const statKeysCode = `type StatKey\\n  = ${statKeys.map(k => `\"${k}\" //${KeyMap.getArtStr(k)}`).join(`\\n  | `)}`\n  return <>\n    <Typography gutterBottom variant=\"h4\">StatKey</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={statKeysCode} />\n      </CardContent>\n    </CardDark>\n  </>\n}\nfunction ArtifactSetKeyPane() {\n  const { t } = useTranslation(\"artifactNames_gen\")\n  const artSetKeysCode = `type ArtifactSetKey\\n  = ${[...new Set(allArtifactSets)].sort().map(k => `\"${k}\" //${t(`artifactNames_gen:${k}`)}`).join(`\\n  | `)}`\n  return <>\n    <Typography gutterBottom variant=\"h4\">ArtifactSetKey</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={artSetKeysCode} />\n      </CardContent>\n    </CardDark>\n  </>\n}\nfunction CharacterKeyPane() {\n  const { t } = useTranslation(\"charNames_gen\")\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const charKeysCode = `type CharacterKey\\n  = ${[...new Set(locationCharacterKeys)].sort().map(k => `\"${k}\" //${t(`charNames_gen:${charKeyToCharName(database.chars.LocationToCharacterKey(k), gender)}`)}`).join(`\\n  | `)}`\n  return <>\n    <Typography gutterBottom variant=\"h4\">CharacterKey</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={charKeysCode} />\n      </CardContent>\n    </CardDark>\n  </>\n}\nfunction WeaponKeyPane() {\n  const { t } = useTranslation(\"weaponNames_gen\")\n  const weaponKeysCode = `type WeaponKey\\n  = ${[...new Set(allWeaponKeys)].sort().map(k => `\"${k}\" //${t(`weaponNames_gen:${k}`)}`).join(`\\n  | `)}`\n  return <>\n    <Typography gutterBottom variant=\"h4\">WeaponKey</Typography>\n    <CardDark>\n      <CardContent>\n        <CodeBlock text={weaponKeysCode} />\n      </CardContent>\n    </CardDark>\n  </>\n}\nfunction MaterialKeyPane() {\n  const { t } = useTranslation(\"material_gen\")\n  const weaponKeysCode = `type MaterialKey\\n  = ${Object.keys(material as any).sort().map(k => `\"${k}\" //${t(`${k}.name`)}`).join(`\\n  | `)}`\n  return <>\n    <Typography gutterBottom variant=\"h4\">MaterialKey</Typography>\n    <CardDark>\n      <CardContent>\n        <Typography gutterBottom>The material keys here are generated using the <MuiLink href=\"https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/MaterialExcelConfigData.json\" target=\"_blank\" rel=\"noreferrer\"><code>MaterialExcelConfigData.json</code></MuiLink> of the datamine. The item names are taken from the english translation, and then converted into <MuiLink component={Link} to=\"KeyNaming\"><code>PascalCase</code></MuiLink>.</Typography>\n        <CodeBlock text={weaponKeysCode} />\n      </CardContent>\n    </CardDark>\n  </>\n}\n\nfunction VersionHistoryPane() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n    <Typography gutterBottom variant=\"h4\">Version History</Typography>\n    <CardDark>\n      <CardContent>\n        <Typography>\n          Version 1\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Typography>Created general <code>IGOOD</code> format with character, weapon, artifact fields.</Typography>\n      </CardContent>\n    </CardDark>\n    <CardDark>\n      <CardContent>\n        <Typography>\n          Version 2\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Typography>Adds <code>materials</code> field to <code>IGOOD</code>. All other fields remain the same. V2 is backwards compatible with V1.</Typography>\n      </CardContent>\n    </CardDark>\n  </Box>\n}\n\ntype LineNumberProps = {\n  digits?: number;\n}\nconst LineNumber = styled(\"textarea\")<LineNumberProps>(({ theme, digits = 2 }) => ({\n  width: `${digits}em`, overflow: \"hidden\", userSelect: \"none\", color: theme.palette.text.secondary, resize: \"none\", border: \"none\", whiteSpace: \"pre\", fontFamily: \"monospace\", lineHeight: 1,\n  \"&:disabled\": {\n    backgroundColor: \"transparent\"\n  }\n}))\n\nconst CodeArea = styled(\"textarea\")(({ theme }) => ({\n  \"&:disabled\": {\n    backgroundColor: \"transparent\"\n  },\n  lineHeight: 1,\n  width: \"100%\",\n  overflowY: \"auto\",\n  overflowX: \"auto\",\n  fontFamily: \"monospace\",\n  border: \"none\",\n  // padding: 1em;\n  whiteSpace: \"pre\",\n  backgroundColor: \"transparent\",\n  resize: \"none\",\n  color: theme.palette.info.light\n}))\nfunction CodeBlock({ text }) {\n  const lines = text.split(/\\r\\n|\\r|\\n/).length + 1\n  const lineNums = Array.from(Array(lines).keys()).map(i => i + 1).join('\\n')\n\n  return <Box display=\"flex\" flexDirection=\"row\">\n    <LineNumber disabled={true} spellCheck=\"false\" aria-label='Code Sample' sx={{ height: `${lines + 1}em` }} value={lineNums} unselectable=\"on\" digits={lines.toString().length} />\n    <CodeArea sx={{ flexGrow: 1, height: `${lines + 1}em` }} disabled={true} spellCheck=\"false\" aria-label='Code Sample' value={text} />\n  </Box>\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["createSvgIcon","_jsx","d","PageDocumentation","ReactGA","hitType","page","currentTab","useMatch","params","CardDark","sx","my","Grid","container","px","py","item","flexGrow","Typography","variant","SqBadge","color","Divider","CardContent","spacing","xs","md","CardLight","height","Tabs","orientation","value","borderRight","borderColor","Tab","label","component","Link","to","Suspense","fallback","Skeleton","width","index","element","Overview","path","VersionHistoryPane","MaterialKeyPane","ArtifactSetKeyPane","WeaponKeyPane","CharacterKeyPane","StatKeyPane","KeyNamingPane","gutterBottom","CodeBlock","text","ArrowRightAlt","verticalAlign","statKeysCode","map","k","KeyMap","join","t","useTranslation","artSetKeysCode","Set","allArtifactSets","sort","database","useContext","DatabaseContext","gender","useDBMeta","charKeysCode","locationCharacterKeys","charKeyToCharName","chars","LocationToCharacterKey","weaponKeysCode","allWeaponKeys","Object","keys","material","href","target","rel","Box","display","flexDirection","gap","LineNumber","styled","theme","digits","overflow","userSelect","palette","secondary","resize","border","whiteSpace","fontFamily","lineHeight","backgroundColor","CodeArea","overflowY","overflowX","info","light","lines","split","length","lineNums","Array","from","i","disabled","spellCheck","unselectable","toString","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","colorTransformations","primary","textPrimary","textSecondary","error","LinkRoot","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","button","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","outline","margin","borderRadius","padding","cursor","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","includes","isArray"],"sourceRoot":""}
{"version":3,"file":"static/js/652.3e60f032.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/ConditionalWrapper.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Context/FormulaDataContext.tsx","Data/Resonance.tsx","PageCharacter/CharacterSelectionModal.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useGender.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/CharacterSort.ts","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\nimport Assets from '../../Assets/Assets';\nimport Artifact from '../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { ICachedArtifact } from '../../Types/artifact';\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\nimport ArtifactTooltip from './ArtifactTooltip';\n\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\n  // Blank artifact slot icon\n  if (!art || !artifactSheet)\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\n        <Box\n          sx={{\n            position: \"absolute\",\n            width: \"70%\", height: \"70%\",\n            left: \"50%\", top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            opacity: 0.7\n          }}\n          component=\"img\"\n          src={Assets.slot[key]}\n        />\n      </Box>\n    </CardDark>\n\n  // Actual artifact icon + info\n  const { mainStatKey, rarity, level } = art\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ?? \"secondary\"\n\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\n    <Box\n      component=\"img\"\n      className={`grad-${rarity}star`}\n      src={artifactSheet.slotIcons[key]}\n      maxWidth=\"100%\"\n      maxHeight=\"100%\"\n    />\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\n    </Typography>\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\n    </Typography>\n  </CardDark></ArtifactTooltip>\n}\n","import { Box, Skeleton, Typography } from \"@mui/material\";\nimport { Suspense } from \"react\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport SqBadge from \"../SqBadge\";\nimport { StarsDisplay } from \"../StarDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\n\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\n  const fallback = <Box>\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\n  </Box>\n  const title = <Suspense fallback={fallback}>\n    <ArtifactData art={art} />\n  </Suspense>\n\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n    {children}\n  </BootstrapTooltip>\n}\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\n  const { slotKey, level, rarity, mainStatKey, substats } = art\n  const slotName = sheet?.getSlotName(slotKey)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const mainIcon = StatIcon[mainStatKey]\n  const mainVariant = KeyMap.getVariant(mainStatKey)\n  return <Box p={1}>\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\n    <Box py={1}>\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\n      </Typography>)}\n    </Box>\n\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\n  </Box>\n}\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\n\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n    maxWidth: 500,\n  },\n}));\nexport default BootstrapTooltip\n","import { Box, Typography } from '@mui/material';\nimport { useMemo } from 'react';\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\nimport { uiInput as input } from '../../Formula';\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useWeapon from '../../ReactHooks/useWeapon';\nimport { ICachedWeapon } from '../../Types/weapon';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\n\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n  return <CardDark>\n    <Box display=\"flex\" >\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\n        <Box\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          width=\"100%\"\n          height=\"auto\"\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ p: 1 }}>\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\n        </Typography>\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\n          <WeaponStat node={UIData.get(input.weapon.main)} />\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\n        </Typography>\n\n      </Box>\n    </Box>\n  </CardDark>\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\n}\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { ascensionMaxLevel } from '../../Data/LevelData';\nimport { DatabaseContext } from '../../Database/Database';\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\nimport { uiInput as input } from '../../Formula';\nimport KeyMap from '../../KeyMap';\nimport CharacterCardPico from './CharacterCardPico';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport { ICachedArtifact } from '../../Types/artifact';\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\nimport { range } from '../../Util/Util';\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\nimport CardLight from '../Card/CardLight';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport { NodeFieldDisplay } from '../FieldDisplay';\nimport SqBadge from '../SqBadge';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport usePromise from '../../ReactHooks/usePromise';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useDBState from '../../ReactHooks/useDBState';\nimport { initCharMeta } from '../../Database/Data/StateData';\nimport { ICachedCharacter } from '../../Types/character';\nimport useGender from '../../ReactHooks/useGender';\n\ntype CharacterCardProps = {\n  characterKey: CharacterKey,\n  onClick?: (characterKey: CharacterKey) => void,\n  onClickHeader?: (characterKey: CharacterKey) => void,\n  onClickTeammate?: (characterKey: CharacterKey) => void,\n  artifactChildren?: Displayable,\n  weaponChildren?: Displayable,\n  characterChildren?: Displayable,\n  footer?: Displayable,\n  hideStats?: boolean\n  isTeammateCard?: boolean,\n}\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\n  const { database } = useContext(DatabaseContext)\n  const { teamData: teamDataContext } = useContext(DataContext)\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\n  const character = useCharacter(characterKey)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const characterDispatch = useCharacterReducer(characterKey)\n  const data = teamData?.[characterKey]?.target\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClickHandler],\n  )\n\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\n    character, characterSheet, characterDispatch\n  }, [character, characterSheet, characterDispatch])\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\n    data,\n    teamData,\n  }), [data, teamData])\n\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={600} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\n        <IconButton sx={{ p: 0.5 }} onClick={_ => setCharMeta({ favorite: !favorite })}>\n          {favorite ? <Favorite /> : <FavoriteBorder />}\n        </IconButton>\n      </Box>\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n        {(character && dataContextObj && characterContextObj) ?\n          <ExistingCharacterCardContent\n            characterContextObj={characterContextObj}\n            dataContextObj={dataContextObj}\n            characterKey={characterKey}\n            onClick={onClick}\n            onClickHeader={onClickHeader}\n            isTeammateCard={isTeammateCard}\n            character={character}\n            onClickTeammate={onClickTeammate}\n            hideStats={hideStats}\n            weaponChildren={weaponChildren}\n            artifactChildren={artifactChildren}\n            characterChildren={characterChildren}\n          /> : <NewCharacterCardContent characterKey={characterKey} />}\n      </ConditionalWrapper>\n      {footer}\n    </CardLight>\n\n  </Suspense>\n}\n\ntype ExistingCharacterCardContentProps = {\n  characterContextObj: CharacterContextObj\n  dataContextObj: dataContextObj\n  characterKey: CharacterKey\n  onClick?: (characterKey: CharacterKey) => void\n  onClickHeader?: (characterKey: CharacterKey) => void\n  isTeammateCard?: boolean\n  character: ICachedCharacter\n  onClickTeammate?: (characterKey: CharacterKey) => void\n  hideStats?: boolean\n  weaponChildren?: Displayable\n  artifactChildren?: Displayable\n  characterChildren?: Displayable\n}\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\n      <HeaderContent />\n    </Header>\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\n      <Artifacts />\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\n        <Grid item xs={1} height=\"100%\">\n          <WeaponCardPico weaponId={character.equippedWeapon} />\n        </Grid>\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\n      </Grid>}\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\n      {!isTeammateCard && !hideStats && <Stats />}\n      {weaponChildren}\n      {artifactChildren}\n      {characterChildren}\n    </CardContent>\n  </DataContext.Provider></CharacterContext.Provider>\n}\n\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\n  return < >\n    <Header characterKey={characterKey} >\n      <HeaderContentNew characterKey={characterKey} />\n    </Header>\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\n    </CardContent>\n  </>\n}\n\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClick, characterKey],\n  )\n  if (!characterSheet) return null\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n    <Box display=\"flex\"\n      position=\"relative\"\n      className={`grad-${characterSheet.rarity}star`}\n      sx={{\n        \"&::before\": {\n          content: '\"\"',\n          display: \"block\", position: \"absolute\",\n          left: 0, top: 0,\n          width: \"100%\", height: \"100%\",\n          opacity: 0.7,\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\n        }\n      }}\n      width=\"100%\" >\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        <Box\n          component=\"img\"\n          src={characterSheet.thumbImg}\n          width=\"100%\"\n          height=\"auto\"\n          maxWidth={256}\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        {children}\n      </Box>\n    </Box>\n  </ConditionalWrapper>\n}\n\nfunction HeaderContent() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterEle = data.get(input.charEle).value as ElementKey\n  const characterLevel = data.get(input.lvl).value\n  const constellation = data.get(input.constellation).value\n  const ascension = data.get(input.asc).value\n  const autoBoost = data.get(input.bonus.auto).value\n  const skillBoost = data.get(input.bonus.skill).value\n  const burstBoost = data.get(input.bonus.burst).value\n\n  const tAuto = data.get(input.total.auto).value\n  const tSkill = data.get(input.total.skill).value\n  const tBurst = data.get(input.total.burst).value\n\n  return <>\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\n    <Grid container spacing={1} flexWrap=\"nowrap\">\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\n      </Grid>\n    </Grid>\n    <Grid container spacing={1} flexWrap=\"nowrap\">\n      <Grid item>\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\n      </Grid>\n      <Grid item>\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\n      </Grid>\n      <Grid item>\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\n      </Grid>\n    </Grid>\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\n\n  </>\n}\n\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, database, gender])\n\n  if (!characterSheet) return null\n  return <>\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterSheet.elementKey} sx={{ opacity: 0.85 }} />\n    <Box mt={1}>\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\n    </Box>\n    <Typography mt={1.5} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\n  </>\n}\n\nfunction Artifacts() {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\n      <Grid item key={key} xs={1}>\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\n      </Grid>\n    )}\n  </Grid>\n}\n\nfunction Stats() {\n  const { data } = useContext(DataContext)\n  return <Box sx={{ width: \"100%\" }} >\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\n      {StatIcon[data.get(input.special).info.key!]}\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\n    </Box>}\n  </Box>\n}\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback, useContext } from 'react';\nimport Assets from '../../Assets/Assets';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { ascensionMaxLevel } from '../../Data/LevelData';\nimport { DatabaseContext } from '../../Database/Database';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useGender from '../../ReactHooks/useGender';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { CharacterKey } from '../../Types/consts';\nimport BootstrapTooltip from '../BootstrapTooltip';\nimport CardDark from '../Card/CardDark';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\n\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const character = useCharacter(characterKey)\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\n    [onClickHandler])\n  if (teammateSheet && character) {\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\n    </Suspense>\n\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\n        <BootstrapTooltip placement=\"top\" title={title}>\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\n            <Box\n              component=\"img\"\n              src={teammateSheet.thumbImgSide}\n              maxWidth=\"100%\"\n              maxHeight=\"100%\"\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\n            />\n          </Box>\n        </BootstrapTooltip>\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\n        </Typography>\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\n        </Typography>\n      </ConditionalWrapper>\n    </CardDark>\n  } else {\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\n    </CardDark>\n  }\n}\n","import { ReactNode } from \"react\";\n\ntype Prop = {\n  condition: boolean,\n  wrapper: (children: ReactNode) => ReactNode\n  falseWrapper?: (children: ReactNode) => ReactNode\n  children: ReactNode\n}\n// Wrap children with element provided by wrapper func when condition is true.\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\n}","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default QuestionTooltip\n","import { Groups } from \"@mui/icons-material\";\nimport { Box, Divider, List, ListItem, ListProps, Palette, PaletteColor, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { DataContext } from \"../Context/DataContext\";\nimport { FormulaDataContext } from \"../Context/FormulaDataContext\";\nimport { NodeDisplay } from \"../Formula/api\";\nimport { Variant } from \"../Formula/type\";\nimport KeyMap, { valueString } from \"../KeyMap\";\nimport { allAmpReactions, AmpReactionKey } from \"../Types/consts\";\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\nimport { evalIfFunc } from \"../Util/Util\";\nimport AmpReactionModeText from \"./AmpReactionModeText\";\nimport ColorText from \"./ColoredText\";\nimport QuestionTooltip from \"./QuestionTooltip\";\nimport StatIcon from \"./StatIcon\";\n\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\n  return <FieldDisplayList sx={{ m: 0 }}>\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\n  </FieldDisplayList>\n}\n\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\n  const { data, oldData } = useContext(DataContext)\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\n  if (!canShow) return null\n  if (\"node\" in field) {\n    const node = data.get(field.node)\n    if (node.isEmpty) return null\n    if (oldData) {\n      const oldNode = oldData.get(field.node)\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\n    }\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\n  }\n  return <BasicFieldDisplay field={field} component={component} />\n}\n\nexport function BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\n  const { data } = useContext(DataContext)\n  const v = evalIfFunc(field.value, data)\n  const variant = evalIfFunc(field.variant, data)\n  const text = field.text && <span>{field.text}</span>\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\n  </Box>\n}\n\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\n  const { data } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onClick = useCallback(() => setFormulaData(data, node), [setFormulaData, data, node])\n\n  if (node.isEmpty) return null\n\n  suffix = suffix && <span>{suffix}</span>\n  const icon = node.info.key && StatIcon[node.info.key]\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\n  const isTeamBuff = node.info.isTeamBuff\n  const fieldFormulaText = node.formula\n  let fieldVal = \"\" as Displayable\n  if (oldValue !== undefined) {\n    const diff = node.value - oldValue\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\n  } else fieldVal = valueString(node.value, node.unit)\n\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip onClick={onClick} title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>\n    {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-flex\", gap: 1, mr: 1 }}>\n      <Box><AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} /></Box>\n      <Divider orientation=\"vertical\" flexItem />\n    </Box>}\n    <span>{fieldFormulaText}</span>\n  </Suspense></Typography>} />\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n      <Typography noWrap>{fieldVal}</Typography>\n      {formulaTextOverlay}\n    </Box>\n  </Box>\n}\nexport interface FieldDisplayListProps extends ListProps {\n  light?: keyof Palette,\n  dark?: keyof Palette,\n  palletOption?: keyof PaletteColor\n}\nexport const FieldDisplayList = styled(List)<FieldDisplayListProps>(({ theme, light = \"contentDark\", dark = \"contentDarker\", palletOption = \"main\" }) => ({\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  margin: 0,\n  '> .MuiListItem-root:nth-of-type(even)': {\n    backgroundColor: (theme.palette[light] as PaletteColor)[palletOption]\n  },\n  '> .MuiListItem-root:nth-of-type(odd)': {\n    backgroundColor: (theme.palette[dark] as PaletteColor)[palletOption]\n  },\n}));\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\n\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\nexport default function SortByButton<Key extends string>({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: ButtonGroupProps & {\n  sortKeys: Key[]\n  value: Key\n  onChange: (value: Key) => void\n  ascending: boolean\n  onChangeAsc: (value: boolean) => void\n}) {\n  const { t } = useTranslation(\"ui\")\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\n    <ButtonGroup {...props} >\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\n        {sortKeys.map(key =>\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\n      </DropdownButton>\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\n      </Button>\n    </ButtonGroup>\n  </Box>\n}\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Rarity } from '../Types/consts'\nimport ColorText from './ColoredText'\n\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\n  <ColorText color={colored ? \"warning\" : undefined} >\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n  </ColorText>\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\n\ntype SolidColoredToggleButtonPartial = {\n  baseColor?: ButtonProps[\"color\"];\n  selectedColor?: ButtonProps[\"color\"];\n}\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\n\n\nconst SolidColoredToggleButton = styled(ToggleButton, {\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\n  '&': {\n    backgroundColor: theme.palette[baseColor].main,\n    color: theme.palette[baseColor].contrastText,\n  },\n  '&:hover': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected': {\n    backgroundColor: theme.palette[selectedColor].main,\n    color: theme.palette[selectedColor].contrastText,\n  },\n  '&.Mui-selected:hover': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n  '&.Mui-disabled': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected.Mui-disabled': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n}));\n\nexport default SolidColoredToggleButton\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\nimport { allElements, ElementKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\nimport StatIcon from \"../StatIcon\";\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: ElementKey[]) => void\n  value: ElementKey[]\n}\nconst elementHandler = handleMultiSelect([...allElements])\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\n  return <ToggleButtonGroup exclusive value={value} {...props}>\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{StatIcon[ele]}</Box>\n    </SolidColoredToggleButton>)}\n  </ToggleButtonGroup>\n}\n","import { ToggleButton } from \"@mui/material\";\nimport Assets from \"../../Assets/Assets\";\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: WeaponTypeKey[]) => void\n  value: WeaponTypeKey[]\n}\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\n    </ToggleButton>)}\n  </SolidToggleButtonGroup>\n}\n","import { Box, Typography } from '@mui/material';\nimport { useMemo } from 'react';\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\nimport { uiInput as input } from '../../Formula';\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useWeapon from '../../ReactHooks/useWeapon';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\nimport WeaponNameTooltip from './WeaponNameTooltip';\n\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n\n  const tooltipAddl = <Box>\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\n  </Box>\n\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\n        <Box\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          maxWidth=\"100%\"\n          maxHeight=\"100%\"\n          sx={{ mt: \"auto\" }}\n        />\n      </WeaponNameTooltip>\n    </Box>\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\n    </Typography>\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\n    </Typography>}\n  </CardDark>\n}\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport { ReactElement, ReactNode, Suspense } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport ImgIcon from \"../Image/ImgIcon\";\n\ntype Data = {\n  sheet: WeaponSheet,\n  addlText?: any,\n  children: ReactElement<any, any> & ReactNode,\n}\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\n    {addlText}\n  </Suspense>\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n    {children}\n  </BootstrapTooltip>\n}\n","import { createContext, useCallback, useState } from \"react\";\nimport { NodeDisplay, UIData } from \"../Formula/uiData\";\nimport useBoolState from \"../ReactHooks/useBoolState\";\n\ntype FormulaDataContextObj = {\n  data?: UIData,\n  node?: NodeDisplay,\n  modalOpen?: boolean,\n  onModalOpen: () => void,\n  onModalClose: () => void,\n  setFormulaData: (data?: UIData, node?: NodeDisplay) => void\n}\nexport const FormulaDataContext = createContext({ setFormulaData: () => { }, onModalOpen: () => { }, onModalClose: () => { } } as FormulaDataContextObj);\n\nexport function FormulaDataWrapper({ children }: { children: JSX.Element }) {\n  const [open, onOpen, onClose] = useBoolState()\n  const [[data, node], setState] = useState([undefined, undefined] as [data: UIData | undefined, node: NodeDisplay | undefined])\n  const setFormulaData = useCallback((data?: UIData, node?: NodeDisplay) => {\n    if (data && node) onOpen()\n    else onClose()\n    setState([data, node])\n  }, [onOpen, onClose])\n  return <FormulaDataContext.Provider value={{ setFormulaData, data, node, modalOpen: open, onModalOpen: onOpen, onModalClose: onClose }} >{children}</FormulaDataContext.Provider>\n}\n","import StatIcon from \"../Components/StatIcon\";\nimport { Translate } from \"../Components/Translate\";\nimport { tally } from \"../Formula\";\nimport { inferInfoMut } from \"../Formula/api\";\nimport { UIData } from \"../Formula/uiData\";\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\nimport { DocumentSection } from \"../Types/sheet\";\nimport { objectKeyValueMap } from \"../Util/Util\";\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\n\ntype IResonance = {\n  name: Displayable,\n  desc: Displayable,\n  icon: Displayable,\n  canShow: (data: UIData) => boolean\n  sections: DocumentSection[]\n}\n\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\n\n// Protective Canopy\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\n\nconst protectiveCanopy: IResonance = {\n  name: tr(\"ProtectiveCanopy.name\"),\n  desc: tr(\"ProtectiveCanopy.desc\"),\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\n  sections: [{\n    teamBuff: true,\n    fields: Object.values(pcNodes).map(node => ({ node }))\n  }]\n}\n\n// Fervent Flames\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\nconst ferventFlames: IResonance = {\n  name: tr(\"FerventFlames.name\"),\n  desc: tr(\"FerventFlames.desc\"),\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.cryo\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: ffNode\n    }]\n  }]\n}\n\n// Soothing Waters\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\nconst soothingWaters: IResonance = {\n  name: tr(\"SoothingWater.name\"),\n  desc: tr(\"SoothingWater.desc\"),\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.pyro\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: swNode\n    }]\n  }]\n}\n\n//ShatteringIce\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\nconst condSI = condReadNode(condSIPath)\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\nconst shatteringIce: IResonance = {\n  name: tr(\"ShatteringIce.name\"),\n  desc: tr(\"ShatteringIce.desc\"),\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.electro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }, {\n    teamBuff: true,\n    path: condSIPath,\n    value: condSI,\n    name: trm(\"ShatteringIce.cond\"),\n    header: {\n      title: tr(\"ShatteringIce.name\"),\n      icon: StatIcon.cryo,\n    },\n    states: {\n      on: {\n        fields: [{\n          node: siNode\n        }]\n      }\n    }\n  }]\n}\n\n// High Voltage\nconst highVoltage: IResonance = {\n  name: tr(\"HighVoltage.name\"),\n  desc: tr(\"HighVoltage.desc\"),\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.hydro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }]\n}\n\n// Impetuous Winds\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\nconst impetuousWinds: IResonance = {\n  name: tr(\"ImpetuousWinds.name\"),\n  desc: tr(\"ImpetuousWinds.desc\"),\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      node: iwNodeStam\n    }, {\n      node: iwNodeMove\n    }, {\n      node: iwNodeCD\n    }]\n  }]\n}\n\n// Enduring Rock\nconst condERPath = [\"resonance\", \"EnduringRock\"]\nconst condER = condReadNode(condERPath)\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\nconst enduringRock: IResonance = {\n  name: tr(\"EnduringRock.name\"),\n  desc: tr(\"EnduringRock.desc\"),\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"EnduringRock.desc\"),\n    fields: [{\n      node: erNodeshield_\n    }]\n  }, {\n    teamBuff: true,\n    path: condERPath,\n    value: condER,\n    header: {\n      title: tr(\"EnduringRock.name\"),\n      icon: StatIcon.geo,\n    },\n    name: st(\"protectedByShield\"),\n    states: {\n      on: {\n        fields: [{\n          node: erNodeDMG_\n        }, {\n          node: erNodeRes_\n        }, {\n          text: sgt(\"duration\"),\n          value: 15,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\n// Sprawling Canopy\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\nconst condSC2ele = condReadNode(condSC2elePath)\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\nconst condSC3ele = condReadNode(condSC3elePath)\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, { key: \"eleMas\" }))\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, { key: \"eleMas\" })))\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, { key: \"eleMas\" })))\nconst sprawlingGreenery: IResonance = {\n  name: tr(\"SprawlingGreenery.name\"),\n  desc: tr(\"SprawlingGreenery.desc\"),\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"SprawlingGreenery.desc\"),\n    fields: [{ node: scBase_eleMas }]\n  }, {\n    teamBuff: true,\n    path: condSC2elePath,\n    value: condSC2ele,\n    header: {\n      title: tr(\"SprawlingGreenery.name\"),\n      icon: StatIcon.dendro,\n    },\n    name: trm(\"SprawlingGreenery.cond2ele\"),\n    states: {\n      on: {\n        fields: [{\n          node: sc2ele_eleMas\n        }, {\n          text: sgt(\"duration\"),\n          value: 6,\n          unit: \"s\"\n        }]\n      }\n    }\n  }, {\n    teamBuff: true,\n    path: condSC3elePath,\n    value: condSC3ele,\n    header: {\n      title: tr(\"SprawlingGreenery.name\"),\n      icon: StatIcon.dendro,\n    },\n    name: trm(\"SprawlingGreenery.cond3ele\"),\n    states: {\n      on: {\n        fields: [{\n          node: sc3ele_eleMas\n        }, {\n          text: sgt(\"duration\"),\n          value: 6,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\n\nexport const resonanceSheets: IResonance[] = [\n  protectiveCanopy,\n  ferventFlames,\n  soothingWaters,\n  shatteringIce,\n  highVoltage,\n  impetuousWinds,\n  enduringRock,\n  sprawlingGreenery,\n]\n\nexport const resonanceData = inferInfoMut({\n  premod: {\n    ...pcNodes,\n    atk_: ffNode,\n    hp_: swNode,\n    staminaDec_: iwNodeStam,\n    moveSPD_: iwNodeMove,\n    cdRed_: iwNodeCD,\n    shield_: erNodeshield_,\n    all_dmg_: erNodeDMG_,\n    geo_enemyRes_: erNodeRes_,\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\n  },\n  total: {\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\n    critRate_: siNode\n  }\n})\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Tooltip, tooltipClasses, TooltipProps, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { ChangeEvent, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../Components/Card/CardDark\";\nimport CardLight from \"../Components/Card/CardLight\";\nimport CharacterCard from \"../Components/Character/CharacterCard\";\nimport CloseButton from \"../Components/CloseButton\";\nimport ModalWrapper from \"../Components/ModalWrapper\";\nimport SortByButton from \"../Components/SortByButton\";\nimport SqBadge from \"../Components/SqBadge\";\nimport { StarsDisplay } from \"../Components/StarDisplay\";\nimport ElementToggle from \"../Components/ToggleButton/ElementToggle\";\nimport WeaponToggle from \"../Components/ToggleButton/WeaponToggle\";\nimport { DataContext } from \"../Context/DataContext\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport useCharacter from \"../ReactHooks/useCharacter\";\nimport useDBState from \"../ReactHooks/useDBState\";\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\";\nimport useGender from \"../ReactHooks/useGender\";\nimport usePromise from \"../ReactHooks/usePromise\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\nimport { characterFilterConfigs, characterSortConfigs, CharacterSortKey, characterSortMap, initialCharacterDisplayState } from \"../Util/CharacterSort\";\nimport { filterFunction, sortFunction } from \"../Util/SortByFilters\";\n\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\n\ntype CharacterSelectionModalProps = {\n  show: boolean,\n  newFirst?: boolean\n  onHide: () => void,\n  onSelect?: (ckey: CharacterKey) => void,\n  filter?: characterFilter\n}\nconst sortKeys = Object.keys(characterSortMap)\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const [state, stateDispatch] = useDBState(\"CharacterDisplay\", initialCharacterDisplayState)\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n\n  // character favorite updater\n  useEffect(() => database.states.followAny(s => s.includes(\"charMeta_\") && forceUpdate()), [forceUpdate, database])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n  const deferredState = useDeferredValue(state)\n  const deferredDbDirty = useDeferredValue(dbDirty)\n  const characterKeyList = useMemo(() => {\n    if (!characterSheets) return []\n    const { element, weaponType, sortType, ascending } = deferredState\n    const sortByKeys = [...(newFirst ? [\"new\"] : []), ...(characterSortMap[sortType] ?? [])] as CharacterSortKey[]\n    return deferredDbDirty && allCharacterKeys\n      .filter(filterFunction({ element, weaponType, name: deferredSearchTerm }, characterFilterConfigs(database, characterSheets)))\n      .sort(sortFunction(sortByKeys, ascending, characterSortConfigs(database, characterSheets), [\"new\", \"favorite\"]))\n  }, [database, newFirst, deferredState, characterSheets, deferredDbDirty, deferredSearchTerm])\n\n  if (!characterSheets) return null\n\n  const { weaponType, element, sortType, ascending } = state\n\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", alignItems: \"center\", gap: 1, flexWrap: \"wrap\" }}>\n        <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => stateDispatch({ weaponType })} value={weaponType} size=\"small\" />\n        <ElementToggle sx={{ height: \"100%\" }} onChange={element => stateDispatch({ element })} value={element} size=\"small\" />\n        <Box flexGrow={1}>\n          <TextField\n            autoFocus\n            value={searchTerm}\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n            label={t(\"characterName\")}\n            size=\"small\"\n            sx={{ height: \"100%\" }}\n            InputProps={{\n              sx: { height: \"100%\" }\n            }}\n          />\n        </Box>\n        <SortByButton sx={{ height: \"100%\" }}\n          sortKeys={sortKeys} value={sortType} onChange={sortType => stateDispatch({ sortType })}\n          ascending={ascending} onChangeAsc={ascending => stateDispatch({ ascending })} />\n        <CloseButton onClick={onHide} />\n      </CardContent>\n      <Divider />\n      <DataContext.Provider value={{ teamData: undefined } as any}>\n        <CardContent><Grid container spacing={1} columns={{ xs: 2, sm: 3, md: 4, lg: 5, }}>\n          {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={1} >\n            {/* <CharacterCard key={characterKey} hideStats characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} /> */}\n            <SelectionCard characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\n          </Grid>)}\n        </Grid></CardContent>\n      </DataContext.Provider>\n    </CardDark>\n  </ModalWrapper>\n}\n\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))({\n  [`& .${tooltipClasses.tooltip}`]: {\n    padding: 0,\n  },\n});\n\nfunction SelectionCard({ characterKey, onClick }: { characterKey: CharacterKey, onClick: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const character = useCharacter(characterKey)\n  const { level = 1, ascension = 0, constellation = 0 } = character ?? {}\n  return <CustomTooltip arrow placement=\"bottom\" title={\n    <Box sx={{ width: 300 }}>\n      <CharacterCard hideStats characterKey={characterKey} />\n    </Box>\n  }>\n    <Box>\n      <CardLight sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>\n        <CardActionArea onClick={onClick}>\n          <Box display=\"flex\"\n            position=\"relative\"\n            className={`grad-${characterSheet?.rarity}star`}\n            sx={{\n              \"&::before\": {\n                content: '\"\"',\n                display: \"block\", position: \"absolute\",\n                left: 0, top: 0,\n                width: \"100%\", height: \"100%\",\n                opacity: 0.5,\n                backgroundImage: `url(${characterSheet?.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\n              }\n            }}\n            width=\"100%\" >\n            <Box flexShrink={1} sx={{ maxWidth: { xs: \"33%\", lg: \"30%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\n              <Box\n                component=\"img\"\n                src={characterSheet?.thumbImg}\n                width=\"100%\"\n                height=\"auto\"\n                maxWidth={256}\n                sx={{ mt: \"auto\" }}\n              />\n            </Box>\n            <Box flexGrow={1} sx={{ pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1} justifyContent=\"space-evenly\">\n              <Typography variant=\"body2\" ><SqBadge color={characterSheet?.elementKey} sx={{ opacity: 0.85 }}>{characterSheet?.name}</SqBadge></Typography>\n              {character ? <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n                <Box sx={{ textShadow: \"0 0 5px gray\" }}>\n                  <Typography variant=\"body2\" component=\"span\" whiteSpace=\"nowrap\" >Lv. {level}</Typography>\n                  <Typography variant=\"body2\" component=\"span\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n                </Box>\n                <Typography variant=\"body2\" >C{constellation}</Typography>\n              </Box> : <Typography component=\"span\" variant=\"body2\" ><SqBadge>NEW</SqBadge></Typography>}\n              <Typography variant=\"body2\" ><StarsDisplay stars={characterSheet?.rarity ?? 1} colored /></Typography>\n            </Box>\n          </Box>\n        </CardActionArea>\n      </CardLight>\n    </Box>\n  </CustomTooltip>\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { CharacterKey } from \"../Types/consts\";\n\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\n    [characterKey, updateCharacter, database])\n  return character\n}\n","import { useCallback, useContext } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { IConditionalValues } from \"../Types/sheet\";\nimport { deepClone } from \"../Util/Util\";\n\ntype characterReducerBonusStatsAction = {\n  type: \"editStats\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerenemyOverrideAction = {\n  type: \"enemyOverride\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerResetStatsAction = {\n  type: \"resetStats\",\n  statKey: string\n}\ntype characterTeamAction = {\n  type: \"team\",\n  index: number,\n  charKey: CharacterKey | \"\"\n}\ntype characterTeamConditional = {\n  type: \"teamConditional\",\n  teamMateKey: CharacterKey,\n  conditional: IConditionalValues\n}\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\n\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\n\n  const { database } = useContext(DatabaseContext)\n\n  return useCallback((action: characterReducerAction): void => {\n    if (!characterKey) return\n    const character = database.chars.get(characterKey)\n    if (!character) return\n    if (\"type\" in action) switch (action.type) {\n      case \"enemyOverride\": {\n        const enemyOverride = character.enemyOverride\n        const { statKey, value } = action\n        if (enemyOverride[statKey] === value) break\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\n        break\n      }\n      case \"editStats\": {\n        const { statKey, value } = action\n        const bonusStats = deepClone(character.bonusStats)\n        if (bonusStats[statKey] === value) break\n        if (!value) delete bonusStats[statKey]\n        else bonusStats[statKey] = value\n        database.chars.set(characterKey, { ...character, bonusStats })\n        break\n      }\n      case \"resetStats\": {\n        const { statKey } = action\n        const bonusStats = character.bonusStats\n        delete bonusStats[statKey]\n        database.chars.set(characterKey, { ...character, bonusStats })\n        break\n      }\n      case \"teamConditional\": {\n        const { teamMateKey, conditional } = action\n        const teamConditional = deepClone(character.teamConditional)\n        teamConditional[teamMateKey] = conditional\n        database.chars.set(characterKey, { ...character, teamConditional })\n        break\n      }\n      case \"team\": {\n        const { team: team_ } = character\n        const team = [...team_] as ICachedCharacter[\"team\"]\n        const { index, charKey } = action\n        team[index] = charKey\n        // update src character\n        database.chars.set(characterKey, { ...character, team })\n      }\n    } else\n      database.chars.set(characterKey, { ...character, ...action })\n  }, [characterKey, database])\n}\n","import { useCallback, useState } from \"react\"\n\nexport default function useForceUpdate(): [object, () => void] {\n  const [stateDirty, update] = useState({})\n  const forceUpdateHook = useCallback(() => update({}), [])\n  return [stateDirty, forceUpdateHook]\n}","import { useEffect, useState } from \"react\";\nimport { ArtCharDatabase } from \"../Database/Database\";\n\nexport default function useGender(database: ArtCharDatabase) {\n  const [gender, setG] = useState(database.gender)\n  useEffect(() => database.states.follow(\"dbMeta\", () => setG(database.gender)), [database, setG])\n  return gender\n}\n","import { useMediaQuery, useTheme } from \"@mui/material\";\n\nexport default function useMediaQueryUp() {\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\n  const md = useMediaQuery(theme.breakpoints.up('md'));\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\n  if (xl) return \"xl\"\n  if (lg) return \"lg\"\n  if (md) return \"md\"\n  if (sm) return \"sm\"\n  return \"xs\"\n}\n","import { useContext, useDeferredValue, useEffect } from \"react\";\nimport { TeamData } from \"../Context/DataContext\";\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { resonanceData } from \"../Data/Resonance\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\nimport { common } from \"../Formula\";\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\nimport { Data } from \"../Formula/type\";\nimport { ICachedArtifact } from \"../Types/artifact\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport { objectMap } from \"../Util/Util\";\nimport useForceUpdate from \"./useForceUpdate\";\nimport usePromise from \"./usePromise\";\n\ntype TeamDataBundle = {\n  teamData: Dict<CharacterKey, Data[]>\n  teamBundle: Dict<CharacterKey, CharBundle>\n}\n\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\n  const { database } = useContext(DatabaseContext)\n  const [dbDirty, setDbDirty] = useForceUpdate()\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\n\n  useEffect(() =>\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\n    [characterKey, setDbDirty, database])\n\n  return data\n}\n\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\n  Promise<TeamData | undefined> {\n  if (!characterKey) return\n\n  // Retrive from cache\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\n    const cache = database._getTeamData(characterKey)\n    if (cache) return cache\n  }\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\n  if (!teamData || !teamBundle) return\n\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\n\n  const data = objectMap(calcData, (obj, ck) => {\n    const { data: _, ...rest } = teamBundle[ck]!\n    return { ...obj, ...rest }\n  })\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\n    database.cacheTeamData(characterKey, data)\n  return data\n}\n\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\n  Promise<TeamDataBundle | undefined> {\n  if (!characterKey) return\n  const character = database.chars.get(characterKey)\n  if (!character) return\n\n  const char1DataBundle = await getCharDataBundle(database, true, mainStatAssumptionLevel,\n    character,\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\n  )\n  if (!char1DataBundle) return\n  const teamBundle = { [characterKey]: char1DataBundle }\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\n\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\n    if (!ck) return\n    const tchar = database.chars.get(ck)\n    if (!tchar) return\n    const databundle = await getCharDataBundle(database, false, 0,\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\n      database.weapons.get(tchar.equippedWeapon)!,\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\n    if (!databundle) return\n    teamBundle[ck] = databundle\n    teamData[ck] = databundle.data\n  }))\n\n  return { teamData, teamBundle }\n}\ntype CharBundle = {\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  characterSheet: CharacterSheet,\n  weaponSheet: WeaponSheet,\n  data: Data[]\n}\n\nasync function getCharDataBundle(database: ArtCharDatabase, useCustom = false, mainStatAssumptionLevel: number,\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  artifacts: ICachedArtifact[] | Data,\n): Promise<CharBundle | undefined> {\n\n  const characterSheet = await CharacterSheet.get(character.key, database.gender)\n  if (!characterSheet) return\n  const weaponSheet = await WeaponSheet.get(weapon.key)\n  if (!weaponSheet) return\n\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\n\n  const weaponSheetsData = useCustom ? (() => {\n    // display is included in WeaponSheet.getAllDataOfType\n    const { display, ...restWeaponSheetData } = weaponSheet.data\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\n  })() : weaponSheet.data\n\n  const artifactSheetsData = await ArtifactSheet.getAllData\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, artifactSheetsData])\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\n  const data = [\n    ...artifactData,\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\n    dataObjForWeapon(weapon),\n    sheetData,\n    common, // NEED TO PUT THIS AT THE END\n    resonanceData,\n  ]\n  return { character, weapon, characterSheet, weaponSheet, data }\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\n\nexport default function useWeapon(weaponID: string | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\n  useEffect(() =>\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\n    [weaponID, setWeapon, database])\n  return weapon\n}\n","import { AllCharacterSheets } from \"../Data/Characters/CharacterSheet\";\nimport { initCharMeta } from \"../Database/Data/StateData\";\nimport { ArtCharDatabase } from \"../Database/Database\";\nimport i18n from \"../i18n\";\nimport { allElements, allWeaponTypeKeys, CharacterKey, charKeyToCharName, ElementKey, WeaponTypeKey } from \"../Types/consts\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nexport const characterSortKeys = [\"new\", \"level\", \"rarity\", \"name\", \"favorite\"] as const\nexport type CharacterSortKey = typeof characterSortKeys[number]\n\nexport function characterSortConfigs(database: ArtCharDatabase, characterSheets: AllCharacterSheets): SortConfigs<CharacterSortKey, CharacterKey> {\n  return {\n    new: (ck) => database.chars.get(ck as CharacterKey) ? 0 : 1,\n    name: (ck) => i18n.t(`charNames_gen:${charKeyToCharName(ck, database.gender)}`).toString(),\n    level: (ck) => {\n      const char = database.chars.get(ck as CharacterKey)\n      return char ? char.level * (char.ascension + 1) : 0\n    },\n    rarity: (ck) => characterSheets(ck, database.gender)?.rarity ?? 0,\n    favorite: (ck,) => (database.states.getWithInit(`charMeta_${ck}`, initCharMeta).favorite ? 1 : 0),\n  }\n}\n\nexport const characterFilterKeys = [\"element\", \"weaponType\", \"name\", \"new\"] as const\nexport type CharacterFilterKey = typeof characterFilterKeys[number]\n\nexport type CharacterFilterConfigs = FilterConfigs<CharacterFilterKey, CharacterKey>\nexport function characterFilterConfigs(database: ArtCharDatabase, characterSheets: AllCharacterSheets): CharacterFilterConfigs {\n  return {\n    element: (ck, filter) => filter.includes(characterSheets(ck, database.gender)?.elementKey),\n    weaponType: (ck, filter) => filter.includes(characterSheets(ck, database.gender)?.weaponTypeKey),\n    name: (ck, filter) => filter === undefined || (i18n.t(`charNames_gen:${charKeyToCharName(ck, database.gender)}`).toLowerCase().includes(filter.toLowerCase())),\n    new: (ck, filter) => filter === undefined || (filter === (database.chars.get(ck as CharacterKey) ? \"no\" : \"yes\")),\n  }\n}\n\nexport const characterSortMap: Partial<Record<CharacterSortKey, CharacterSortKey[]>> = {\n  name: [\"favorite\", \"name\"],\n  level: [\"favorite\", \"level\", \"rarity\", \"name\"],\n  rarity: [\"favorite\", \"rarity\", \"level\", \"name\"]\n}\n\nexport const initialCharacterDisplayState = (): {\n  sortType: CharacterSortKey\n  ascending: boolean\n  weaponType: WeaponTypeKey[]\n  element: ElementKey[]\n  pageIndex: number\n} => ({\n  sortType: characterSortKeys[0],\n  ascending: false,\n  weaponType: [...allWeaponTypeKeys],\n  element: [...allElements],\n  pageIndex: 0\n})\n","import { toggleArr } from \"./Util\"\n\nexport function handleMultiSelect<T>(allKeys: T[]) {\n  return (arr: T[], v: T): T[] => {\n    const len = arr.length\n    if (len === allKeys.length) return [v]\n    if (len === 1 && arr[0] === v) return [...allKeys]\n    return [...new Set(toggleArr(arr, v))]\n  }\n}\n","type SortConfig<T> = (id: T) => number | string\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\n\nexport function sortFunction<Keys extends string, T>(sortbyKeys: Keys[], ascending: boolean, configs: SortConfigs<Keys, T>, ascendingBypass: Keys[] = []) {\n  return (a: T, b: T): number => {\n    for (const sortby of sortbyKeys) {\n      let diff = 0\n      const config = configs[sortby]\n      const aV = config(a)\n      const bV = config(b)\n      if (typeof aV === \"string\" && typeof bV === \"string\") diff = aV.localeCompare(bV)\n      else diff = ((bV as number) - (aV as number))\n      if (diff !== 0) return ascendingBypass.includes(sortby) ? diff : (ascending ? -1 : 1) * diff\n    }\n    return 0\n  }\n}\n\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\nexport function filterFunction<Keys extends string, T>(filterOptions: Partial<Record<Keys, any>>, filterConfigs: FilterConfigs<Keys, T>) {\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\n}\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamDataContext","DataContext","teamData","useTeamData","character","useCharacter","gender","useGender","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","useDBState","initCharMeta","favorite","setCharMeta","Skeleton","CardLight","zIndex","IconButton","_","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","thumbImgSide","transformOrigin","falseWrapper","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","emphasize","setFormulaData","FormulaDataContext","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","allAmpReactions","mr","AmpReactionModeText","reaction","trigger","subVariant","Divider","orientation","flexItem","boxShadow","Groups","noWrap","List","light","dark","palletOption","borderRadius","shape","overflow","margin","SortByButton","sortKeys","onChange","ascending","onChangeAsc","t","useTranslation","i18nKey","selected","disabled","startIcon","faSortAmountDownAlt","faSortAmountUp","StarIcon","faStar","StarsDisplay","Array","keys","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","main","contrastText","elementHandler","handleMultiSelect","allElements","ElementToggle","ToggleButtonGroup","exclusive","weaponTypeHandler","allWeaponTypeKeys","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","createContext","onModalOpen","onModalClose","FormulaDataWrapper","useBoolState","open","onOpen","onClose","useState","setState","Provider","modalOpen","tr","strKey","ns","key18","trm","teamSize","sum","tally","pcNodes","objectKeyValueMap","e","greaterEq","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","sgt","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","characterSortMap","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","initialCharacterDisplayState","state","stateDispatch","characterSheets","useForceUpdate","dbDirty","forceUpdate","useEffect","followAny","s","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","deferredState","deferredDbDirty","characterKeyList","sortType","sortByKeys","allCharacterKeys","filterFunction","characterFilterConfigs","sort","sortFunction","characterSortConfigs","autoFocus","InputProps","sm","md","SelectionCard","CustomTooltip","padding","chars","updateCharacter","follow","r","action","type","enemyOverride","statKey","set","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","stateDirty","update","setG","useMediaQueryUp","useTheme","useMediaQuery","breakpoints","up","mainStatAssumptionLevel","overrideArt","overrideWeapon","setDbDirty","dbDirtyDeferred","getTeamDataCalc","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","weapons","equippedArtifacts","a","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponTypeKey","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","weaponID","setWeapon","characterSortKeys","new","i18n","charKeyToCharName","toString","char","getWithInit","toLowerCase","pageIndex","allKeys","arr","len","Set","toggleArr","sortbyKeys","configs","ascendingBypass","b","sortby","config","aV","bV","localeCompare","filterOptions","filterConfigs","entries","every","optionKey","optionVal"],"sourceRoot":""}
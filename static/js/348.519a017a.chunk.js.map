{"version":3,"file":"static/js/348.519a017a.chunk.js","mappings":"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","sources":["Components/Character/LocationAutocomplete.tsx","Components/Character/LocationName.tsx","Components/Character/ThumbSide.tsx","Components/ConditionalWrapper.tsx","Components/GeneralAutocomplete.tsx","Components/SolidColoredTextfield.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageWeapon/WeaponCard.tsx","PageWeapon/index.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useMediaQueryUp.tsx","ReactHooks/useWeapon.tsx","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { BusinessCenter } from \"@mui/icons-material\"\nimport { AutocompleteProps, Skeleton } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\"\nimport { DatabaseContext } from \"../../Database/Database\"\nimport useDBMeta from \"../../ReactHooks/useDBMeta\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { charKeyToCharName, charKeyToLocCharKey, LocationCharacterKey, LocationKey, travelerKeys } from \"../../Types/consts\"\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../GeneralAutocomplete\"\nimport ThumbSide from \"./ThumbSide\"\n\nexport function LocationAutocomplete({ location, setLocation, filter = () => true, autoCompleteProps = {} }:\n  { location: LocationKey, setLocation: (v: LocationKey) => void, filter?: (v: CharacterSheet) => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<LocationKey>, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\n  const { t } = useTranslation([\"ui\", \"artifact\", \"charNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: LocationCharacterKey): string => t(`charNames_gen:${charKeyToCharName(database.chars.LocationToCharacterKey(key), gender)}`), [database, gender, t])\n  const toImg = useCallback((key: LocationKey) => key === \"\" ? <BusinessCenter /> : characterSheets ? <ThumbSide src={characterSheets(database.chars.LocationToCharacterKey(key), gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [database, gender, characterSheets])\n  const isFavorite = useCallback((key: LocationCharacterKey) => key === \"Traveler\" ?\n    travelerKeys.some(key => database.charMeta.get(key).favorite) :\n    key ? database.charMeta.get(key).favorite : false, [database])\n\n  const values: GeneralAutocompleteOption<LocationKey>[] = useMemo(() => [{\n    key: \"\",\n    label: t`artifact:filterLocation.inventory`,\n  },\n  ...Array.from(new Set(database.chars.keys.filter(k => characterSheets?.(k, gender) ? filter(characterSheets(k, gender)!) : true).map(k => charKeyToLocCharKey(k))))\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database, characterSheets, filter, gender])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" options={values} valueKey={location} onChange={setLocation} toImg={toImg} clearKey=\"\" {...autoCompleteProps} /></Suspense>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { LocationKey } from \"../../Types/consts\";\n\nexport default function LocationName({ location }: { location: LocationKey }) {\n  const { t } = useTranslation(\"ui\");\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get((location && database) ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender, database])\n  return <Typography component=\"span\">\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t<string>(\"inventory\")}</span>}\n  </Typography>\n\n}\n","import { styled } from \"@mui/system\";\n\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"auto\",\n  height: `2.3em`,\n  lineHeight: 1,\n  verticalAlign: \"text-bottom\",\n  marginTop: theme.spacing(-3),\n  marginLeft: theme.spacing(-1.25),\n  marginRight: theme.spacing(-1),\n  marginBottom: theme.spacing(-1),\n}))\n\nexport default ThumbSide","import { ReactNode } from \"react\";\n\ntype Prop = {\n  condition: boolean,\n  wrapper: (children: ReactNode) => ReactNode\n  falseWrapper?: (children: ReactNode) => ReactNode\n  children: ReactNode\n}\n// Wrap children with element provided by wrapper func when condition is true.\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\n}","import { Favorite } from \"@mui/icons-material\"\nimport { Autocomplete, AutocompleteProps, ListItemIcon, ListItemText, MenuItem, Skeleton } from \"@mui/material\"\nimport { Suspense } from \"react\"\nimport SolidColoredTextField from \"./SolidColoredTextfield\"\n\nexport type GeneralAutocompleteOption<T extends string> = { key: T, label: string, favorite?: boolean }\nexport default function GeneralAutocomplete<T extends string>({ options, valueKey: key, label, onChange, disable = () => false, clearKey, toImg, ...acProps }:\n  { valueKey: T, label?: string, onChange: (v: T) => void, toImg: (v: T) => JSX.Element, disable?: (v: T) => boolean, clearKey?: T } & Omit<AutocompleteProps<GeneralAutocompleteOption<T>, false, true, false>, \"renderInput\" | \"onChange\">) {\n  const value = options.find(o => o.key === key) ?? { key: \"\" as T, label: \"ERROR\" }\n  return <Autocomplete\n    options={options}\n    value={value}\n    clearIcon={key !== clearKey ? undefined : null}\n    onChange={(event, newValue, reason) => {\n      if (reason === \"clear\" && clearKey !== undefined) return onChange(clearKey)\n      return newValue !== null && onChange(newValue.key)\n    }}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={props => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={value !== undefined ? toImg(value.key) : undefined}\n      hasValue={!!value?.key}\n    />}\n    renderOption={(props, option) => <MenuItem value={option.key} {...props}>\n      <ListItemIcon>{toImg(option.key)}</ListItemIcon>\n      <ListItemText>\n        <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n          {option.key === value?.key ? <strong>{option.label}</strong> : option.label}\n        </Suspense>\n      </ListItemText>\n      {!!option.favorite && <Favorite />}\n    </MenuItem>\n    }\n    {...acProps}\n  />\n}\n","import { TextField, TextFieldProps, useTheme } from \"@mui/material\";\n\ntype SolidColoredTextFieldProps = Omit<TextFieldProps, \"multiline\" | \"variant\" | \"color\" | \"hiddenLabel\" | \"type\" | \"InputLabelProps\"> & {\n  hasValue: boolean\n  startAdornment?: Displayable\n}\nexport default function SolidColoredTextField({ hasValue, startAdornment, InputProps, sx, ...props }: SolidColoredTextFieldProps) {\n  const theme = useTheme()\n  return <TextField\n    {...props}\n    variant=\"filled\"\n    color={hasValue ? \"success\" : \"primary\"}\n    hiddenLabel={props.label ? false : true}\n    type=\"search\"\n    InputProps={{\n      ...InputProps,\n      startAdornment,\n    }}\n    InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n    sx={{\n      ...sx,\n      // Fill in the background without using the `focused` prop\n      \"& .MuiFilledInput-root\": { backgroundColor: hasValue ? theme.palette.success.main : theme.palette.primary.main, paddingTop: props.label ? undefined : 0, paddingBottom: 0, flexWrap: \"nowrap\", },\n      \"& .MuiFilledInput-root.Mui-focused\": { backgroundColor: hasValue ? theme.palette.success.light : theme.palette.primary.light },\n      \"& .MuiFilledInput-root:hover\": { backgroundColor: hasValue ? theme.palette.success.dark : theme.palette.primary.dark },\n      // Remove the colored bar at the bottom of the input\n      \"& .MuiFilledInput-root:before\": { border: \"none\" },\n      \"& .MuiFilledInput-root.Mui-disabled:before\": { border: \"none\" },\n      \"& .MuiFilledInput-root:after\": { border: \"none\" },\n      \"& .MuiFilledInput-root:hover:not(.Mui-disabled):before\": { border: \"none\" },\n      // Remove the x at the end of search input for IE\n      \"& input[type=search]::-ms-clear\": { display: \"none\", width: 0, height: 0 },\n      \"& input[type=search]::-ms-reveal\": { display: \"none\", width: 0, height: 0 },\n      // Remove the x at the end of search input for Chrome\n      \"& input[type=search]::-webkit-search-decoration\": { display: \"none\" },\n      \"& input[type=search]::-webkit-search-cancel-button\": { display: \"none\" },\n      \"& input[type=search]::-webkit-search-results-button\": { display: \"none\" },\n      \"& input[type=search]::-webkit-search-results-decoration\": { display: \"none\" },\n    }}\n  />\n}\n","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\n\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\nexport default function SortByButton<Key extends string>({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: ButtonGroupProps & {\n  sortKeys: Key[]\n  value: Key\n  onChange: (value: Key) => void\n  ascending: boolean\n  onChangeAsc: (value: boolean) => void\n}) {\n  const { t } = useTranslation(\"ui\")\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\n    <ButtonGroup {...props} >\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\n        {sortKeys.map(key =>\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\n      </DropdownButton>\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\n      </Button>\n    </ButtonGroup>\n  </Box>\n}\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Rarity } from '../Types/consts'\nimport ColorText from './ColoredText'\n\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\n  <ColorText color={colored ? \"warning\" : undefined} >\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n  </ColorText>\n","import { ToggleButton } from \"@mui/material\";\nimport Assets from \"../../Assets/Assets\";\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: WeaponTypeKey[]) => void\n  value: WeaponTypeKey[]\n}\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\n    </ToggleButton>)}\n  </SolidToggleButtonGroup>\n}\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../Assets/Assets\"\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\nimport CardDark from \"../Card/CardDark\"\nimport CardLight from \"../Card/CardLight\"\nimport CloseButton from \"../CloseButton\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport { StarsDisplay } from \"../StarDisplay\"\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\n\ntype WeaponSelectionModalProps = {\n  show: boolean,\n  ascension?: number,\n  onHide: () => void,\n  onSelect: (wKey: WeaponKey) => void,\n  filter?: (sheet: WeaponSheet) => boolean,\n  weaponTypeFilter?: WeaponTypeKey,\n}\n\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\n\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets(wKey)))\n    .filter(wKey => weaponFilter.includes(weaponSheets(wKey).weaponType))\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\n    .sort((a, b) => weaponSheets(b).rarity - weaponSheets(a).rarity)\n\n  if (!weaponSheets) return null\n\n  return <ModalWrapper open={show} onClose={onHide}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\n          </Grid >\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid >\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {weaponIdList.map(weaponKey => {\n          const weaponSheet = weaponSheets(weaponKey)\n          return <Grid item key={weaponKey} lg={3} md={4}>\n            <CardLight sx={{ height: \"100%\" }} >\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\n                <Box sx={{ flexGrow: 1, px: 1 }}>\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n                </Box>\n              </CardActionArea>\n            </CardLight>\n          </Grid>\n        })}\n      </Grid></CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onHide} />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t, disableClearable: true }} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Box, Button, CardContent, Grid, Pagination, Skeleton, TextField, ToggleButton, Typography } from '@mui/material';\nimport { ChangeEvent, lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactGA from 'react-ga4';\nimport { Trans, useTranslation } from 'react-i18next';\nimport CardDark from '../Components/Card/CardDark';\nimport SolidToggleButtonGroup from '../Components/SolidToggleButtonGroup';\nimport SortByButton from '../Components/SortByButton';\nimport { StarsDisplay } from '../Components/StarDisplay';\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle';\nimport WeaponSelectionModal from '../Components/Weapon/WeaponSelectionModal';\nimport WeaponSheet from '../Data/Weapons/WeaponSheet';\nimport { DatabaseContext } from '../Database/Database';\nimport useForceUpdate from '../ReactHooks/useForceUpdate';\nimport useMediaQueryUp from '../ReactHooks/useMediaQueryUp';\nimport usePromise from '../ReactHooks/usePromise';\nimport { allRarities, WeaponKey } from '../Types/consts';\nimport { filterFunction, sortFunction } from '../Util/SortByFilters';\nimport { clamp } from '../Util/Util';\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../Util/WeaponSort';\nimport { initialWeapon } from '../Util/WeaponUtil';\nimport WeaponCard from './WeaponCard';\n\n// Lazy load the weapon display\nconst WeaponEditor = lazy(() => import('./WeaponEditor'))\n\nconst columns = { xs: 1, sm: 2, md: 3, lg: 3, xl: 4 }\nconst numToShowMap = { xs: 10 - 1, sm: 12 - 1, md: 24 - 1, lg: 24 - 1, xl: 24 - 1 }\n\nconst sortKeys = Object.keys(weaponSortMap)\n\nexport default function PageWeapon() {\n  const { t } = useTranslation([\"page_weapon\", \"ui\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const [state, setState] = useState(database.displayWeapon.get())\n  useEffect(() => database.displayWeapon.follow((r, dbMeta) => setState(dbMeta)), [database])\n\n  const [newWeaponModalShow, setnewWeaponModalShow] = useState(false)\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  const invScrollRef = useRef<HTMLDivElement>(null)\n  const [pageIndex, setPageIndex] = useState(0)\n  //set follow, should run only once\n  useEffect(() => {\n    ReactGA.send({ hitType: \"pageview\", page: '/weapon' })\n    return database.weapons.followAny((k, r) => (r === \"new\" || r === \"remove\") && forceUpdate())\n  }, [forceUpdate, database])\n\n  const brPt = useMediaQueryUp()\n  const maxNumToDisplay = numToShowMap[brPt]\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const deleteWeapon = useCallback(async (key: string) => {\n    const weapon = database.weapons.get(key)\n    if (!weapon) return\n    const name = t(`weaponNames_gen:${weapon.key}`)\n\n    if (!window.confirm(t(\"removeWeapon\", { value: name }))) return\n    database.weapons.remove(key)\n    if (state.editWeaponId === key)\n      database.displayWeapon.set({ editWeaponId: \"\" })\n  }, [state.editWeaponId, database, t])\n\n  const editWeapon = useCallback((key: string | undefined) => {\n    database.displayWeapon.set({ editWeaponId: key })\n  }, [database])\n\n  const newWeapon = useCallback(\n    (weaponKey: WeaponKey) => {\n      editWeapon(database.weapons.new(initialWeapon(weaponKey)))\n    },\n    [database, editWeapon])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const { sortType, ascending, weaponType, rarity } = state\n  const { weaponIdList, totalWeaponNum } = useMemo(() => {\n    const weapons = database.weapons.values\n    const totalWeaponNum = weapons.length\n    if (!weaponSheets) return { weaponIdList: [], totalWeaponNum }\n    const weaponIdList = weapons\n      .filter(filterFunction({ weaponType, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n      .sort(sortFunction(weaponSortMap[sortType] ?? [], ascending, weaponSortConfigs(weaponSheets)))\n      .map(weapon => weapon.id)\n    return dbDirty && { weaponIdList, totalWeaponNum }\n  }, [dbDirty, database, weaponSheets, sortType, ascending, rarity, weaponType, deferredSearchTerm])\n\n  const { weaponIdsToShow, numPages, currentPageIndex } = useMemo(() => {\n    const numPages = Math.ceil(weaponIdList.length / maxNumToDisplay)\n    const currentPageIndex = clamp(pageIndex, 0, numPages - 1)\n    return { weaponIdsToShow: weaponIdList.slice(currentPageIndex * maxNumToDisplay, (currentPageIndex + 1) * maxNumToDisplay), numPages, currentPageIndex }\n  }, [weaponIdList, pageIndex, maxNumToDisplay])\n\n  // Pagination\n  const totalShowing = weaponIdList.length !== totalWeaponNum ? `${weaponIdList.length}/${totalWeaponNum}` : `${totalWeaponNum}`\n  const setPage = useCallback(\n    (_: ChangeEvent<unknown>, value: number) => {\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      setPageIndex(value - 1);\n    },\n    [setPageIndex, invScrollRef]\n  )\n\n  const resetEditWeapon = useCallback(() => database.displayWeapon.set({ editWeaponId: \"\" }), [database])\n\n  const { editWeaponId } = state\n\n  // Validate weaponId to be an actual weapon\n  useEffect(() => {\n    if (!editWeaponId) return\n    if (!database.weapons.get(editWeaponId))\n      resetEditWeapon()\n  }, [database, editWeaponId, resetEditWeapon])\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    {/* Editor/character detail display */}\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={editWeaponId}\n        footer\n        onClose={resetEditWeapon}\n      />\n    </Suspense>\n\n    <CardDark ref={invScrollRef} sx={{ p: 2, pb: 1 }}>\n      <Grid container spacing={1} sx={{ mb: 1 }}>\n        <Grid item>\n          <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => database.displayWeapon.set({ weaponType })} value={weaponType} size=\"small\" />\n        </Grid>\n        <Grid item>\n          <SolidToggleButtonGroup sx={{ height: \"100%\" }} onChange={(e, newVal) => database.displayWeapon.set({ rarity: newVal })} value={rarity} size=\"small\">\n            {allRarities.map(star => <ToggleButton key={star} value={star}><Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box></ToggleButton>)}\n          </SolidToggleButtonGroup>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <TextField\n            autoFocus\n            size=\"small\"\n            value={searchTerm}\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n            label={t(\"weaponName\")}\n            sx={{ height: \"100%\" }}\n            InputProps={{\n              sx: { height: \"100%\" }\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <SortByButton sx={{ height: \"100%\" }} sortKeys={sortKeys}\n            value={sortType} onChange={sortType => database.displayWeapon.set({ sortType })}\n            ascending={ascending} onChangeAsc={ascending => database.displayWeapon.set({ ascending })}\n          />\n        </Grid>\n      </Grid>\n      <Grid container alignItems=\"flex-end\">\n        <Grid item flexGrow={1}>\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n        </Grid>\n        <Grid item>\n          <ShowingWeapon numShowing={weaponIdsToShow.length} total={totalShowing} t={t} />\n        </Grid>\n      </Grid>\n    </CardDark>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 500 }} />}>\n      <Grid container spacing={1} columns={columns}>\n        <Grid item xs={1}>\n          <CardDark sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n            <CardContent>\n              <Typography sx={{ textAlign: \"center\" }}>{t(\"page_weapon:addWeapon\")}</Typography>\n            </CardContent>\n            <WeaponSelectionModal show={newWeaponModalShow} onHide={() => setnewWeaponModalShow(false)} onSelect={newWeapon} />\n            <Box sx={{\n              flexGrow: 1,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n            >\n              <Button onClick={() => setnewWeaponModalShow(true)} color=\"info\" sx={{ borderRadius: \"1em\" }}>\n                <Typography variant=\"h1\"><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></Typography>\n              </Button>\n            </Box>\n          </CardDark>\n        </Grid>\n        {weaponIdsToShow.map(weaponId =>\n          <Grid item key={weaponId} xs={1} >\n            <WeaponCard\n              weaponId={weaponId}\n              onDelete={deleteWeapon}\n              onEdit={editWeapon}\n              canEquip\n            />\n          </Grid>)}\n      </Grid>\n    </Suspense>\n    {numPages > 1 && <CardDark><CardContent>\n      <Grid container alignItems=\"flex-end\">\n        <Grid item flexGrow={1}>\n          <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n        </Grid>\n        <Grid item>\n          <ShowingWeapon numShowing={weaponIdsToShow.length} total={totalShowing} t={t} />\n        </Grid>\n      </Grid>\n    </CardContent></CardDark>}\n  </Box>\n}\nfunction ShowingWeapon({ numShowing, total, t }) {\n  return <Typography color=\"text.secondary\">\n    <Trans t={t} i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Weapons\n    </Trans>\n  </Typography>\n}\n","import { useCallback, useState } from \"react\"\n\nexport default function useForceUpdate(): [object, () => void] {\n  const [stateDirty, update] = useState({})\n  const forceUpdateHook = useCallback(() => update({}), [])\n  return [stateDirty, forceUpdateHook]\n}","import { useMediaQuery, useTheme } from \"@mui/material\";\n\nexport default function useMediaQueryUp() {\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\n  const md = useMediaQuery(theme.breakpoints.up('md'));\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\n  const xl = useMediaQuery(theme.breakpoints.up('xl'));\n  if (xl) return \"xl\"\n  if (lg) return \"lg\"\n  if (md) return \"md\"\n  if (sm) return \"sm\"\n  return \"xs\"\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\n\nexport default function useWeapon(weaponID: string | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\n  useEffect(() =>\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\n    [weaponID, setWeapon, database])\n  return weapon\n}\n","import { toggleArr } from \"./Util\"\n\nexport function handleMultiSelect<T>(allKeys: T[]) {\n  return (arr: T[], v: T): T[] => {\n    const len = arr.length\n    if (len === allKeys.length) return [v]\n    if (len === 1 && arr[0] === v) return [...allKeys]\n    return [...new Set(toggleArr(arr, v))]\n  }\n}\n","type SortConfig<T> = (id: T) => number | string\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\n\nexport function sortFunction<Keys extends string, T>(sortbyKeys: Keys[], ascending: boolean, configs: SortConfigs<Keys, T>, ascendingBypass: Keys[] = []) {\n  return (a: T, b: T): number => {\n    for (const sortby of sortbyKeys) {\n      let diff = 0\n      const config = configs[sortby]\n      const aV = config(a)\n      const bV = config(b)\n      if (typeof aV === \"string\" && typeof bV === \"string\") diff = aV.localeCompare(bV)\n      else diff = ((bV as number) - (aV as number))\n      if (diff !== 0) return ascendingBypass.includes(sortby) ? diff : (ascending ? -1 : 1) * diff\n    }\n    return 0\n  }\n}\n\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\nexport function filterFunction<Keys extends string, T>(filterOptions: Partial<Record<Keys, any>>, filterConfigs: FilterConfigs<Keys, T>) {\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\n}\n"],"names":["LocationAutocomplete","location","setLocation","filter","autoCompleteProps","t","useTranslation","database","useContext","DatabaseContext","gender","useDBMeta","characterSheets","usePromise","CharacterSheet","toText","useCallback","key","charKeyToCharName","chars","LocationToCharacterKey","toImg","src","thumbImgSide","sx","pr","isFavorite","travelerKeys","charMeta","get","favorite","values","useMemo","label","Array","from","Set","keys","k","map","charKeyToLocCharKey","v","sort","a","b","localeCompare","Suspense","fallback","variant","width","size","options","valueKey","onChange","clearKey","LocationName","characterSheet","component","name","nameWIthIcon","verticalAlign","ThumbSide","styled","theme","display","height","lineHeight","marginTop","spacing","marginLeft","marginRight","marginBottom","ConditionalWrapper","condition","wrapper","falseWrapper","children","GeneralAutocomplete","disable","acProps","value","find","o","clearIcon","undefined","event","newValue","reason","isOptionEqualToValue","option","renderInput","props","startAdornment","hasValue","renderOption","SolidColoredTextField","InputProps","useTheme","color","hiddenLabel","type","InputLabelProps","style","palette","text","primary","backgroundColor","success","main","paddingTop","paddingBottom","flexWrap","light","dark","border","SortByButton","sortKeys","ascending","onChangeAsc","alignItems","gap","i18nKey","title","selected","disabled","onClick","startIcon","icon","faSortAmountDownAlt","faSortAmountUp","className","StarIcon","faStar","StarsDisplay","stars","colored","_","i","weaponTypeHandler","handleMultiSelect","allWeaponTypeKeys","WeaponToggle","exclusive","wt","Assets","WeaponSelectionModal","show","ascension","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","useState","weaponFilter","setWeaponfilter","useEffect","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","includes","weaponType","toLowerCase","rarity","open","onClose","py","container","item","flexGrow","autoFocus","e","target","weaponKey","weaponSheet","lg","md","getImg","px","large","WeaponCard","weaponId","onEdit","onDelete","canEquip","extraButtons","weapon","useWeapon","cs","weaponTypeKey","wrapperFunc","falseWrapperFunc","weapons","set","UIData","computeUIData","data","dataObjForWeapon","level","refinement","id","lock","input","stats","x","img","minHeight","flexDirection","justifyContent","position","pt","right","bottom","zIndex","mb","fontSize","noWrap","textAlign","borderRadius","ascensionMaxLevel","top","float","node","info","displayVal","valueString","unit","StatIcon","KeyMap","p","getOptionDisabled","disableClearable","placement","arrow","faEdit","faTrashAlt","WeaponEditor","lazy","columns","xs","sm","xl","numToShowMap","Object","weaponSortMap","PageWeapon","displayWeapon","state","setState","follow","r","dbMeta","newWeaponModalShow","setnewWeaponModalShow","useForceUpdate","dbDirty","forceUpdate","invScrollRef","useRef","pageIndex","setPageIndex","ReactGA","hitType","page","followAny","brPt","useMediaQueryUp","maxNumToDisplay","deleteWeapon","window","confirm","remove","editWeaponId","editWeapon","newWeapon","new","initialWeapon","sortType","totalWeaponNum","length","filterFunction","weaponFilterConfigs","sortFunction","weaponSortConfigs","numPages","Math","ceil","currentPageIndex","clamp","weaponIdsToShow","slice","totalShowing","setPage","current","scrollIntoView","behavior","resetEditWeapon","my","footer","ref","pb","newVal","allRarities","star","count","ShowingWeapon","numShowing","total","faPlus","stateDirty","update","useMediaQuery","breakpoints","up","weaponID","setWeapon","allKeys","arr","len","toggleArr","sortbyKeys","configs","ascendingBypass","sortby","diff","config","aV","bV","filterOptions","filterConfigs","obj","entries","every","optionKey","optionVal"],"sourceRoot":""}